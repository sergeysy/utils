#pragma once
#ifndef ENUM_DEFINITION__INL__1F640F79_5A1F_444F_97A9_BEA055A1CC0E
#define ENUM_DEFINITION__INL__1F640F79_5A1F_444F_97A9_BEA055A1CC0E

#include <FormatHelper.h>
#include <stdexcept>
#include <string>
#include <map>

//
// Sample:
//---------- Declaration: ---------------------
//
// DECLARE_ENUM_3(ExecutionType,
//     Market, L"market",
//     Instant, L"instant",
//     Request, L"request");
//
//---------- Usage: ---------------------------
// ExecutionType::EnumType type_mk = ExecutionType::Market;
// ExecutionType::EnumType type_ie = ExecutionType::Instant;
// ExecutionType::EnumType type_rq = ExecutionType::Request;
//
// std::wstring name_mk = ExecutionType::ToString(type_mk); // returns "market"
// std::wstring name_ie = ExecutionType::ToString(type_ie); // returns "instant"
// std::wstring name_rq = ExecutionType::ToString(type_rq); // returns "request"
//
// ExecutionType::EnumType type_parsed_mk = ExecutionType::Parse(L"market"); // returns 'ExecutionType::Market'
// ExecutionType::EnumType type_parsed_ie = ExecutionType::Parse(L"instant"); // returns 'ExecutionType::Instant'
// ExecutionType::EnumType type_parsed_rq = ExecutionType::Parse(L"request"); // returns 'ExecutionType::Request'
//


#define DECLARE_ENUM_TYPE_1(_enum_1) \
    enum EnumType { _enum_1 }
#define DECLARE_ENUM_TYPE_2(_enum_1, _enum_2) \
    enum EnumType { _enum_1, _enum_2 }
#define DECLARE_ENUM_TYPE_3(_enum_1, _enum_2, _enum_3) \
    enum EnumType { _enum_1, _enum_2, _enum_3 }
#define DECLARE_ENUM_TYPE_4(_enum_1, _enum_2, _enum_3, _enum_4) \
    enum EnumType { _enum_1, _enum_2, _enum_3, _enum_4 }
#define DECLARE_ENUM_TYPE_5(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5) \
    enum EnumType { _enum_1, _enum_2, _enum_3, _enum_4, _enum_5 }
#define DECLARE_ENUM_TYPE_6(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6)\
    enum EnumType { _enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6 }
#define DECLARE_ENUM_TYPE_7(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7)\
    enum EnumType { _enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7 }
#define DECLARE_ENUM_TYPE_8(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8)\
    enum EnumType { _enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8 }
#define DECLARE_ENUM_TYPE_9(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9)\
    enum EnumType { _enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9 }
#define DECLARE_ENUM_TYPE_10(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10)\
    enum EnumType { _enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10 }
#define DECLARE_ENUM_TYPE_11(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11)\
    enum EnumType { _enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11 }
#define DECLARE_ENUM_TYPE_12(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12)\
    enum EnumType { _enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12 }
#define DECLARE_ENUM_TYPE_13(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13)\
    enum EnumType { _enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13 }
#define DECLARE_ENUM_TYPE_14(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14)\
    enum EnumType { _enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14 }
#define DECLARE_ENUM_TYPE_15(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15)\
    enum EnumType { _enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15 }
#define DECLARE_ENUM_TYPE_16(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16)\
    enum EnumType { _enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16 }
#define DECLARE_ENUM_TYPE_17(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17)\
    enum EnumType { _enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17 }
#define DECLARE_ENUM_TYPE_18(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18)\
    enum EnumType { _enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18 }
#define DECLARE_ENUM_TYPE_19(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19)\
    enum EnumType { _enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19 }
#define DECLARE_ENUM_TYPE_20(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20)\
    enum EnumType { _enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20 }
#define DECLARE_ENUM_TYPE_21(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21)\
    enum EnumType { _enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21 }
#define DECLARE_ENUM_TYPE_22(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21, _enum_22)\
    enum EnumType { _enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21, _enum_22 }
#define DECLARE_ENUM_TYPE_23(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21, _enum_22, _enum_23)\
    enum EnumType { _enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21, _enum_22, _enum_23 }
#define DECLARE_ENUM_TYPE_24(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21, _enum_22, _enum_23, _enum_24)\
    enum EnumType { _enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21, _enum_22, _enum_23, _enum_24 }
#define DECLARE_ENUM_TYPE_25(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21, _enum_22, _enum_23, _enum_24, _enum_25)\
    enum EnumType { _enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21, _enum_22, _enum_23, _enum_24, _enum_25 }
#define DECLARE_ENUM_TYPE_26(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21, _enum_22, _enum_23, _enum_24, _enum_25, _enum_26)\
    enum EnumType { _enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21, _enum_22, _enum_23, _enum_24, _enum_25, _enum_26 }
#define DECLARE_ENUM_TYPE_27(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21, _enum_22, _enum_23, _enum_24, _enum_25, _enum_26, _enum_27)\
    enum EnumType { _enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21, _enum_22, _enum_23, _enum_24, _enum_25, _enum_26, _enum_27 }
#define DECLARE_ENUM_TYPE_28(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21, _enum_22, _enum_23, _enum_24, _enum_25, _enum_26, _enum_27, _enum_28)\
    enum EnumType { _enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21, _enum_22, _enum_23, _enum_24, _enum_25, _enum_26, _enum_27, _enum_28 }
#define DECLARE_ENUM_TYPE_29(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21, _enum_22, _enum_23, _enum_24, _enum_25, _enum_26, _enum_27, _enum_28, _enum_29)\
    enum EnumType { _enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21, _enum_22, _enum_23, _enum_24, _enum_25, _enum_26, _enum_27, _enum_28, _enum_29 }
#define DECLARE_ENUM_TYPE_30(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21, _enum_22, _enum_23, _enum_24, _enum_25, _enum_26, _enum_27, _enum_28, _enum_29, _enum_30)\
    enum EnumType { _enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21, _enum_22, _enum_23, _enum_24, _enum_25, _enum_26, _enum_27, _enum_28, _enum_29, _enum_30 }
#define DECLARE_ENUM_TYPE_31(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21, _enum_22, _enum_23, _enum_24, _enum_25, _enum_26, _enum_27, _enum_28, _enum_29, _enum_30, _enum_31)\
    enum EnumType { _enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21, _enum_22, _enum_23, _enum_24, _enum_25, _enum_26, _enum_27, _enum_28, _enum_29, _enum_30, _enum_31 }
#define DECLARE_ENUM_TYPE_32(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21, _enum_22, _enum_23, _enum_24, _enum_25, _enum_26, _enum_27, _enum_28, _enum_29, _enum_30, _enum_31, _enum_32)\
    enum EnumType { _enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21, _enum_22, _enum_23, _enum_24, _enum_25, _enum_26, _enum_27, _enum_28, _enum_29, _enum_30, _enum_31, _enum_32 }
#define DECLARE_ENUM_TYPE_33(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21, _enum_22, _enum_23, _enum_24, _enum_25, _enum_26, _enum_27, _enum_28, _enum_29, _enum_30, _enum_31, _enum_32, _enum_33)\
    enum EnumType { _enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21, _enum_22, _enum_23, _enum_24, _enum_25, _enum_26, _enum_27, _enum_28, _enum_29, _enum_30, _enum_31, _enum_32, _enum_33 }
#define DECLARE_ENUM_TYPE_34(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21, _enum_22, _enum_23, _enum_24, _enum_25, _enum_26, _enum_27, _enum_28, _enum_29, _enum_30, _enum_31, _enum_32, _enum_33, _enum_34)\
    enum EnumType { _enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21, _enum_22, _enum_23, _enum_24, _enum_25, _enum_26, _enum_27, _enum_28, _enum_29, _enum_30, _enum_31, _enum_32, _enum_33, _enum_34 }
#define DECLARE_ENUM_TYPE_35(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21, _enum_22, _enum_23, _enum_24, _enum_25, _enum_26, _enum_27, _enum_28, _enum_29, _enum_30, _enum_31, _enum_32, _enum_33, _enum_34, _enum_35)\
    enum EnumType { _enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21, _enum_22, _enum_23, _enum_24, _enum_25, _enum_26, _enum_27, _enum_28, _enum_29, _enum_30, _enum_31, _enum_32, _enum_33, _enum_34, _enum_35 }
#define DECLARE_ENUM_TYPE_36(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21, _enum_22, _enum_23, _enum_24, _enum_25, _enum_26, _enum_27, _enum_28, _enum_29, _enum_30, _enum_31, _enum_32, _enum_33, _enum_34, _enum_35, _enum_36)\
    enum EnumType { _enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21, _enum_22, _enum_23, _enum_24, _enum_25, _enum_26, _enum_27, _enum_28, _enum_29, _enum_30, _enum_31, _enum_32, _enum_33, _enum_34, _enum_35, _enum_36 }
#define DECLARE_ENUM_TYPE_37(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21, _enum_22, _enum_23, _enum_24, _enum_25, _enum_26, _enum_27, _enum_28, _enum_29, _enum_30, _enum_31, _enum_32, _enum_33, _enum_34, _enum_35, _enum_36, _enum_37)\
    enum EnumType { _enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21, _enum_22, _enum_23, _enum_24, _enum_25, _enum_26, _enum_27, _enum_28, _enum_29, _enum_30, _enum_31, _enum_32, _enum_33, _enum_34, _enum_35, _enum_36, _enum_37 }
#define DECLARE_ENUM_TYPE_38(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21, _enum_22, _enum_23, _enum_24, _enum_25, _enum_26, _enum_27, _enum_28, _enum_29, _enum_30, _enum_31, _enum_32, _enum_33, _enum_34, _enum_35, _enum_36, _enum_37, _enum_38)\
    enum EnumType { _enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21, _enum_22, _enum_23, _enum_24, _enum_25, _enum_26, _enum_27, _enum_28, _enum_29, _enum_30, _enum_31, _enum_32, _enum_33, _enum_34, _enum_35, _enum_36, _enum_37, _enum_38 }
#define DECLARE_ENUM_TYPE_39(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21, _enum_22, _enum_23, _enum_24, _enum_25, _enum_26, _enum_27, _enum_28, _enum_29, _enum_30, _enum_31, _enum_32, _enum_33, _enum_34, _enum_35, _enum_36, _enum_37, _enum_38, _enum_39)\
    enum EnumType { _enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21, _enum_22, _enum_23, _enum_24, _enum_25, _enum_26, _enum_27, _enum_28, _enum_29, _enum_30, _enum_31, _enum_32, _enum_33, _enum_34, _enum_35, _enum_36, _enum_37, _enum_38, _enum_39 }
#define DECLARE_ENUM_TYPE_40(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21, _enum_22, _enum_23, _enum_24, _enum_25, _enum_26, _enum_27, _enum_28, _enum_29, _enum_30, _enum_31, _enum_32, _enum_33, _enum_34, _enum_35, _enum_36, _enum_37, _enum_38, _enum_39, _enum_40)\
    enum EnumType { _enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21, _enum_22, _enum_23, _enum_24, _enum_25, _enum_26, _enum_27, _enum_28, _enum_29, _enum_30, _enum_31, _enum_32, _enum_33, _enum_34, _enum_35, _enum_36, _enum_37, _enum_38, _enum_39, _enum_40 }
#define DECLARE_ENUM_TYPE_41(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21, _enum_22, _enum_23, _enum_24, _enum_25, _enum_26, _enum_27, _enum_28, _enum_29, _enum_30, _enum_31, _enum_32, _enum_33, _enum_34, _enum_35, _enum_36, _enum_37, _enum_38, _enum_39, _enum_40, _enum_41)\
    enum EnumType { _enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21, _enum_22, _enum_23, _enum_24, _enum_25, _enum_26, _enum_27, _enum_28, _enum_29, _enum_30, _enum_31, _enum_32, _enum_33, _enum_34, _enum_35, _enum_36, _enum_37, _enum_38, _enum_39, _enum_40, _enum_41 }
#define DECLARE_ENUM_TYPE_42(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21, _enum_22, _enum_23, _enum_24, _enum_25, _enum_26, _enum_27, _enum_28, _enum_29, _enum_30, _enum_31, _enum_32, _enum_33, _enum_34, _enum_35, _enum_36, _enum_37, _enum_38, _enum_39, _enum_40, _enum_41, _enum_42)\
    enum EnumType { _enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21, _enum_22, _enum_23, _enum_24, _enum_25, _enum_26, _enum_27, _enum_28, _enum_29, _enum_30, _enum_31, _enum_32, _enum_33, _enum_34, _enum_35, _enum_36, _enum_37, _enum_38, _enum_39, _enum_40, _enum_41, _enum_42 }
#define DECLARE_ENUM_TYPE_43(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21, _enum_22, _enum_23, _enum_24, _enum_25, _enum_26, _enum_27, _enum_28, _enum_29, _enum_30, _enum_31, _enum_32, _enum_33, _enum_34, _enum_35, _enum_36, _enum_37, _enum_38, _enum_39, _enum_40, _enum_41, _enum_42, _enum_43)\
    enum EnumType { _enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21, _enum_22, _enum_23, _enum_24, _enum_25, _enum_26, _enum_27, _enum_28, _enum_29, _enum_30, _enum_31, _enum_32, _enum_33, _enum_34, _enum_35, _enum_36, _enum_37, _enum_38, _enum_39, _enum_40, _enum_41, _enum_42, _enum_43 }
#define DECLARE_ENUM_TYPE_44(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21, _enum_22, _enum_23, _enum_24, _enum_25, _enum_26, _enum_27, _enum_28, _enum_29, _enum_30, _enum_31, _enum_32, _enum_33, _enum_34, _enum_35, _enum_36, _enum_37, _enum_38, _enum_39, _enum_40, _enum_41, _enum_42, _enum_43, _enum_44)\
    enum EnumType { _enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21, _enum_22, _enum_23, _enum_24, _enum_25, _enum_26, _enum_27, _enum_28, _enum_29, _enum_30, _enum_31, _enum_32, _enum_33, _enum_34, _enum_35, _enum_36, _enum_37, _enum_38, _enum_39, _enum_40, _enum_41, _enum_42, _enum_43, _enum_44 }
#define DECLARE_ENUM_TYPE_45(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21, _enum_22, _enum_23, _enum_24, _enum_25, _enum_26, _enum_27, _enum_28, _enum_29, _enum_30, _enum_31, _enum_32, _enum_33, _enum_34, _enum_35, _enum_36, _enum_37, _enum_38, _enum_39, _enum_40, _enum_41, _enum_42, _enum_43, _enum_44, _enum_45)\
    enum EnumType { _enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21, _enum_22, _enum_23, _enum_24, _enum_25, _enum_26, _enum_27, _enum_28, _enum_29, _enum_30, _enum_31, _enum_32, _enum_33, _enum_34, _enum_35, _enum_36, _enum_37, _enum_38, _enum_39, _enum_40, _enum_41, _enum_42, _enum_43, _enum_44, _enum_45 }
#define DECLARE_ENUM_TYPE_46(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21, _enum_22, _enum_23, _enum_24, _enum_25, _enum_26, _enum_27, _enum_28, _enum_29, _enum_30, _enum_31, _enum_32, _enum_33, _enum_34, _enum_35, _enum_36, _enum_37, _enum_38, _enum_39, _enum_40, _enum_41, _enum_42, _enum_43, _enum_44, _enum_45, _enum_46)\
    enum EnumType { _enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21, _enum_22, _enum_23, _enum_24, _enum_25, _enum_26, _enum_27, _enum_28, _enum_29, _enum_30, _enum_31, _enum_32, _enum_33, _enum_34, _enum_35, _enum_36, _enum_37, _enum_38, _enum_39, _enum_40, _enum_41, _enum_42, _enum_43, _enum_44, _enum_45, _enum_46 }
#define DECLARE_ENUM_TYPE_47(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21, _enum_22, _enum_23, _enum_24, _enum_25, _enum_26, _enum_27, _enum_28, _enum_29, _enum_30, _enum_31, _enum_32, _enum_33, _enum_34, _enum_35, _enum_36, _enum_37, _enum_38, _enum_39, _enum_40, _enum_41, _enum_42, _enum_43, _enum_44, _enum_45, _enum_46, _enum_47)\
    enum EnumType { _enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21, _enum_22, _enum_23, _enum_24, _enum_25, _enum_26, _enum_27, _enum_28, _enum_29, _enum_30, _enum_31, _enum_32, _enum_33, _enum_34, _enum_35, _enum_36, _enum_37, _enum_38, _enum_39, _enum_40, _enum_41, _enum_42, _enum_43, _enum_44, _enum_45, _enum_46, _enum_47 }
#define DECLARE_ENUM_TYPE_48(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21, _enum_22, _enum_23, _enum_24, _enum_25, _enum_26, _enum_27, _enum_28, _enum_29, _enum_30, _enum_31, _enum_32, _enum_33, _enum_34, _enum_35, _enum_36, _enum_37, _enum_38, _enum_39, _enum_40, _enum_41, _enum_42, _enum_43, _enum_44, _enum_45, _enum_46, _enum_47, _enum_48)\
    enum EnumType { _enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21, _enum_22, _enum_23, _enum_24, _enum_25, _enum_26, _enum_27, _enum_28, _enum_29, _enum_30, _enum_31, _enum_32, _enum_33, _enum_34, _enum_35, _enum_36, _enum_37, _enum_38, _enum_39, _enum_40, _enum_41, _enum_42, _enum_43, _enum_44, _enum_45, _enum_46, _enum_47, _enum_48 }
#define DECLARE_ENUM_TYPE_49(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21, _enum_22, _enum_23, _enum_24, _enum_25, _enum_26, _enum_27, _enum_28, _enum_29, _enum_30, _enum_31, _enum_32, _enum_33, _enum_34, _enum_35, _enum_36, _enum_37, _enum_38, _enum_39, _enum_40, _enum_41, _enum_42, _enum_43, _enum_44, _enum_45, _enum_46, _enum_47, _enum_48, _enum_49)\
    enum EnumType { _enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21, _enum_22, _enum_23, _enum_24, _enum_25, _enum_26, _enum_27, _enum_28, _enum_29, _enum_30, _enum_31, _enum_32, _enum_33, _enum_34, _enum_35, _enum_36, _enum_37, _enum_38, _enum_39, _enum_40, _enum_41, _enum_42, _enum_43, _enum_44, _enum_45, _enum_46, _enum_47, _enum_48, _enum_49 }
#define DECLARE_ENUM_TYPE_50(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21, _enum_22, _enum_23, _enum_24, _enum_25, _enum_26, _enum_27, _enum_28, _enum_29, _enum_30, _enum_31, _enum_32, _enum_33, _enum_34, _enum_35, _enum_36, _enum_37, _enum_38, _enum_39, _enum_40, _enum_41, _enum_42, _enum_43, _enum_44, _enum_45, _enum_46, _enum_47, _enum_48, _enum_49, _enum_50)\
    enum EnumType { _enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21, _enum_22, _enum_23, _enum_24, _enum_25, _enum_26, _enum_27, _enum_28, _enum_29, _enum_30, _enum_31, _enum_32, _enum_33, _enum_34, _enum_35, _enum_36, _enum_37, _enum_38, _enum_39, _enum_40, _enum_41, _enum_42, _enum_43, _enum_44, _enum_45, _enum_46, _enum_47, _enum_48, _enum_49, _enum_50 }

#define DECLARE_ENUM_PARSE_INIT_1(_enum_1, _name_1)\
    private: static std::map<std::wstring, EnumType> InitParse() { std::map<std::wstring, EnumType> parse_map; parse_map[_name_1] = _enum_1; return parse_map; }
#define DECLARE_ENUM_PARSE_INIT_2(_enum_1, _name_1, _enum_2, _name_2)\
    private: static std::map<std::wstring, EnumType> InitParse() { std::map<std::wstring, EnumType> parse_map; parse_map[_name_1] = _enum_1; parse_map[_name_2] = _enum_2; return parse_map; }
#define DECLARE_ENUM_PARSE_INIT_3(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3)\
    private: static std::map<std::wstring, EnumType> InitParse() { std::map<std::wstring, EnumType> parse_map; parse_map[_name_1] = _enum_1; parse_map[_name_2] = _enum_2; parse_map[_name_3] = _enum_3; return parse_map; }
#define DECLARE_ENUM_PARSE_INIT_4(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4)\
    private: static std::map<std::wstring, EnumType> InitParse() { std::map<std::wstring, EnumType> parse_map; parse_map[_name_1] = _enum_1; parse_map[_name_2] = _enum_2; parse_map[_name_3] = _enum_3; parse_map[_name_4] = _enum_4; return parse_map; }
#define DECLARE_ENUM_PARSE_INIT_5(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5)\
    private: static std::map<std::wstring, EnumType> InitParse() { std::map<std::wstring, EnumType> parse_map; parse_map[_name_1] = _enum_1; parse_map[_name_2] = _enum_2; parse_map[_name_3] = _enum_3; parse_map[_name_4] = _enum_4; parse_map[_name_5] = _enum_5; return parse_map; }
#define DECLARE_ENUM_PARSE_INIT_6(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6)\
    private: static std::map<std::wstring, EnumType> InitParse() { std::map<std::wstring, EnumType> parse_map; parse_map[_name_1] = _enum_1; parse_map[_name_2] = _enum_2; parse_map[_name_3] = _enum_3; parse_map[_name_4] = _enum_4; parse_map[_name_5] = _enum_5; parse_map[_name_6] = _enum_6; return parse_map; }
#define DECLARE_ENUM_PARSE_INIT_7(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7)\
    private: static std::map<std::wstring, EnumType> InitParse() { std::map<std::wstring, EnumType> parse_map; parse_map[_name_1] = _enum_1; parse_map[_name_2] = _enum_2; parse_map[_name_3] = _enum_3; parse_map[_name_4] = _enum_4; parse_map[_name_5] = _enum_5; parse_map[_name_6] = _enum_6; parse_map[_name_7] = _enum_7; return parse_map; }
#define DECLARE_ENUM_PARSE_INIT_8(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8)\
    private: static std::map<std::wstring, EnumType> InitParse() { std::map<std::wstring, EnumType> parse_map; parse_map[_name_1] = _enum_1; parse_map[_name_2] = _enum_2; parse_map[_name_3] = _enum_3; parse_map[_name_4] = _enum_4; parse_map[_name_5] = _enum_5; parse_map[_name_6] = _enum_6; parse_map[_name_7] = _enum_7; parse_map[_name_8] = _enum_8; return parse_map; }
#define DECLARE_ENUM_PARSE_INIT_9(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9)\
    private: static std::map<std::wstring, EnumType> InitParse() { std::map<std::wstring, EnumType> parse_map; parse_map[_name_1] = _enum_1; parse_map[_name_2] = _enum_2; parse_map[_name_3] = _enum_3; parse_map[_name_4] = _enum_4; parse_map[_name_5] = _enum_5; parse_map[_name_6] = _enum_6; parse_map[_name_7] = _enum_7; parse_map[_name_8] = _enum_8; parse_map[_name_9] = _enum_9; return parse_map; }
#define DECLARE_ENUM_PARSE_INIT_10(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10)\
    private: static std::map<std::wstring, EnumType> InitParse() { std::map<std::wstring, EnumType> parse_map; parse_map[_name_1] = _enum_1; parse_map[_name_2] = _enum_2; parse_map[_name_3] = _enum_3; parse_map[_name_4] = _enum_4; parse_map[_name_5] = _enum_5; parse_map[_name_6] = _enum_6; parse_map[_name_7] = _enum_7; parse_map[_name_8] = _enum_8; parse_map[_name_9] = _enum_9; parse_map[_name_10] = _enum_10; return parse_map; }
#define DECLARE_ENUM_PARSE_INIT_11(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11)\
    private: static std::map<std::wstring, EnumType> InitParse() { std::map<std::wstring, EnumType> parse_map; parse_map[_name_1] = _enum_1; parse_map[_name_2] = _enum_2; parse_map[_name_3] = _enum_3; parse_map[_name_4] = _enum_4; parse_map[_name_5] = _enum_5; parse_map[_name_6] = _enum_6; parse_map[_name_7] = _enum_7; parse_map[_name_8] = _enum_8; parse_map[_name_9] = _enum_9; parse_map[_name_10] = _enum_10; parse_map[_name_11] = _enum_11; return parse_map; }
#define DECLARE_ENUM_PARSE_INIT_12(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12)\
    private: static std::map<std::wstring, EnumType> InitParse() { std::map<std::wstring, EnumType> parse_map; parse_map[_name_1] = _enum_1; parse_map[_name_2] = _enum_2; parse_map[_name_3] = _enum_3; parse_map[_name_4] = _enum_4; parse_map[_name_5] = _enum_5; parse_map[_name_6] = _enum_6; parse_map[_name_7] = _enum_7; parse_map[_name_8] = _enum_8; parse_map[_name_9] = _enum_9; parse_map[_name_10] = _enum_10; parse_map[_name_11] = _enum_11; parse_map[_name_12] = _enum_12; return parse_map; }
#define DECLARE_ENUM_PARSE_INIT_13(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13)\
    private: static std::map<std::wstring, EnumType> InitParse() { std::map<std::wstring, EnumType> parse_map; parse_map[_name_1] = _enum_1; parse_map[_name_2] = _enum_2; parse_map[_name_3] = _enum_3; parse_map[_name_4] = _enum_4; parse_map[_name_5] = _enum_5; parse_map[_name_6] = _enum_6; parse_map[_name_7] = _enum_7; parse_map[_name_8] = _enum_8; parse_map[_name_9] = _enum_9; parse_map[_name_10] = _enum_10; parse_map[_name_11] = _enum_11; parse_map[_name_12] = _enum_12; parse_map[_name_13] = _enum_13; return parse_map; }
#define DECLARE_ENUM_PARSE_INIT_14(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14)\
    private: static std::map<std::wstring, EnumType> InitParse() { std::map<std::wstring, EnumType> parse_map; parse_map[_name_1] = _enum_1; parse_map[_name_2] = _enum_2; parse_map[_name_3] = _enum_3; parse_map[_name_4] = _enum_4; parse_map[_name_5] = _enum_5; parse_map[_name_6] = _enum_6; parse_map[_name_7] = _enum_7; parse_map[_name_8] = _enum_8; parse_map[_name_9] = _enum_9; parse_map[_name_10] = _enum_10; parse_map[_name_11] = _enum_11; parse_map[_name_12] = _enum_12; parse_map[_name_13] = _enum_13; parse_map[_name_14] = _enum_14; return parse_map; }
#define DECLARE_ENUM_PARSE_INIT_15(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15)\
    private: static std::map<std::wstring, EnumType> InitParse() { std::map<std::wstring, EnumType> parse_map; parse_map[_name_1] = _enum_1; parse_map[_name_2] = _enum_2; parse_map[_name_3] = _enum_3; parse_map[_name_4] = _enum_4; parse_map[_name_5] = _enum_5; parse_map[_name_6] = _enum_6; parse_map[_name_7] = _enum_7; parse_map[_name_8] = _enum_8; parse_map[_name_9] = _enum_9; parse_map[_name_10] = _enum_10; parse_map[_name_11] = _enum_11; parse_map[_name_12] = _enum_12; parse_map[_name_13] = _enum_13; parse_map[_name_14] = _enum_14; parse_map[_name_15] = _enum_15; return parse_map; }
#define DECLARE_ENUM_PARSE_INIT_16(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16)\
    private: static std::map<std::wstring, EnumType> InitParse() { std::map<std::wstring, EnumType> parse_map; parse_map[_name_1] = _enum_1; parse_map[_name_2] = _enum_2; parse_map[_name_3] = _enum_3; parse_map[_name_4] = _enum_4; parse_map[_name_5] = _enum_5; parse_map[_name_6] = _enum_6; parse_map[_name_7] = _enum_7; parse_map[_name_8] = _enum_8; parse_map[_name_9] = _enum_9; parse_map[_name_10] = _enum_10; parse_map[_name_11] = _enum_11; parse_map[_name_12] = _enum_12; parse_map[_name_13] = _enum_13; parse_map[_name_14] = _enum_14; parse_map[_name_15] = _enum_15; parse_map[_name_16] = _enum_16; return parse_map; }
#define DECLARE_ENUM_PARSE_INIT_17(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17)\
    private: static std::map<std::wstring, EnumType> InitParse() { std::map<std::wstring, EnumType> parse_map; parse_map[_name_1] = _enum_1; parse_map[_name_2] = _enum_2; parse_map[_name_3] = _enum_3; parse_map[_name_4] = _enum_4; parse_map[_name_5] = _enum_5; parse_map[_name_6] = _enum_6; parse_map[_name_7] = _enum_7; parse_map[_name_8] = _enum_8; parse_map[_name_9] = _enum_9; parse_map[_name_10] = _enum_10; parse_map[_name_11] = _enum_11; parse_map[_name_12] = _enum_12; parse_map[_name_13] = _enum_13; parse_map[_name_14] = _enum_14; parse_map[_name_15] = _enum_15; parse_map[_name_16] = _enum_16; parse_map[_name_17] = _enum_17; return parse_map; }
#define DECLARE_ENUM_PARSE_INIT_18(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18)\
    private: static std::map<std::wstring, EnumType> InitParse() { std::map<std::wstring, EnumType> parse_map; parse_map[_name_1] = _enum_1; parse_map[_name_2] = _enum_2; parse_map[_name_3] = _enum_3; parse_map[_name_4] = _enum_4; parse_map[_name_5] = _enum_5; parse_map[_name_6] = _enum_6; parse_map[_name_7] = _enum_7; parse_map[_name_8] = _enum_8; parse_map[_name_9] = _enum_9; parse_map[_name_10] = _enum_10; parse_map[_name_11] = _enum_11; parse_map[_name_12] = _enum_12; parse_map[_name_13] = _enum_13; parse_map[_name_14] = _enum_14; parse_map[_name_15] = _enum_15; parse_map[_name_16] = _enum_16; parse_map[_name_17] = _enum_17; parse_map[_name_18] = _enum_18; return parse_map; }
#define DECLARE_ENUM_PARSE_INIT_19(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19)\
    private: static std::map<std::wstring, EnumType> InitParse() { std::map<std::wstring, EnumType> parse_map; parse_map[_name_1] = _enum_1; parse_map[_name_2] = _enum_2; parse_map[_name_3] = _enum_3; parse_map[_name_4] = _enum_4; parse_map[_name_5] = _enum_5; parse_map[_name_6] = _enum_6; parse_map[_name_7] = _enum_7; parse_map[_name_8] = _enum_8; parse_map[_name_9] = _enum_9; parse_map[_name_10] = _enum_10; parse_map[_name_11] = _enum_11; parse_map[_name_12] = _enum_12; parse_map[_name_13] = _enum_13; parse_map[_name_14] = _enum_14; parse_map[_name_15] = _enum_15; parse_map[_name_16] = _enum_16; parse_map[_name_17] = _enum_17; parse_map[_name_18] = _enum_18; parse_map[_name_19] = _enum_19; return parse_map; }
#define DECLARE_ENUM_PARSE_INIT_20(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20)\
    private: static std::map<std::wstring, EnumType> InitParse() { std::map<std::wstring, EnumType> parse_map; parse_map[_name_1] = _enum_1; parse_map[_name_2] = _enum_2; parse_map[_name_3] = _enum_3; parse_map[_name_4] = _enum_4; parse_map[_name_5] = _enum_5; parse_map[_name_6] = _enum_6; parse_map[_name_7] = _enum_7; parse_map[_name_8] = _enum_8; parse_map[_name_9] = _enum_9; parse_map[_name_10] = _enum_10; parse_map[_name_11] = _enum_11; parse_map[_name_12] = _enum_12; parse_map[_name_13] = _enum_13; parse_map[_name_14] = _enum_14; parse_map[_name_15] = _enum_15; parse_map[_name_16] = _enum_16; parse_map[_name_17] = _enum_17; parse_map[_name_18] = _enum_18; parse_map[_name_19] = _enum_19; parse_map[_name_20] = _enum_20; return parse_map; }
#define DECLARE_ENUM_PARSE_INIT_21(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21)\
    private: static std::map<std::wstring, EnumType> InitParse() { std::map<std::wstring, EnumType> parse_map; parse_map[_name_1] = _enum_1; parse_map[_name_2] = _enum_2; parse_map[_name_3] = _enum_3; parse_map[_name_4] = _enum_4; parse_map[_name_5] = _enum_5; parse_map[_name_6] = _enum_6; parse_map[_name_7] = _enum_7; parse_map[_name_8] = _enum_8; parse_map[_name_9] = _enum_9; parse_map[_name_10] = _enum_10; parse_map[_name_11] = _enum_11; parse_map[_name_12] = _enum_12; parse_map[_name_13] = _enum_13; parse_map[_name_14] = _enum_14; parse_map[_name_15] = _enum_15; parse_map[_name_16] = _enum_16; parse_map[_name_17] = _enum_17; parse_map[_name_18] = _enum_18; parse_map[_name_19] = _enum_19; parse_map[_name_20] = _enum_20; parse_map[_name_21] = _enum_21; return parse_map; }
#define DECLARE_ENUM_PARSE_INIT_22(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22)\
    private: static std::map<std::wstring, EnumType> InitParse() { std::map<std::wstring, EnumType> parse_map; parse_map[_name_1] = _enum_1; parse_map[_name_2] = _enum_2; parse_map[_name_3] = _enum_3; parse_map[_name_4] = _enum_4; parse_map[_name_5] = _enum_5; parse_map[_name_6] = _enum_6; parse_map[_name_7] = _enum_7; parse_map[_name_8] = _enum_8; parse_map[_name_9] = _enum_9; parse_map[_name_10] = _enum_10; parse_map[_name_11] = _enum_11; parse_map[_name_12] = _enum_12; parse_map[_name_13] = _enum_13; parse_map[_name_14] = _enum_14; parse_map[_name_15] = _enum_15; parse_map[_name_16] = _enum_16; parse_map[_name_17] = _enum_17; parse_map[_name_18] = _enum_18; parse_map[_name_19] = _enum_19; parse_map[_name_20] = _enum_20; parse_map[_name_21] = _enum_21; parse_map[_name_22] = _enum_22; return parse_map; }
#define DECLARE_ENUM_PARSE_INIT_23(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23)\
    private: static std::map<std::wstring, EnumType> InitParse() { std::map<std::wstring, EnumType> parse_map; parse_map[_name_1] = _enum_1; parse_map[_name_2] = _enum_2; parse_map[_name_3] = _enum_3; parse_map[_name_4] = _enum_4; parse_map[_name_5] = _enum_5; parse_map[_name_6] = _enum_6; parse_map[_name_7] = _enum_7; parse_map[_name_8] = _enum_8; parse_map[_name_9] = _enum_9; parse_map[_name_10] = _enum_10; parse_map[_name_11] = _enum_11; parse_map[_name_12] = _enum_12; parse_map[_name_13] = _enum_13; parse_map[_name_14] = _enum_14; parse_map[_name_15] = _enum_15; parse_map[_name_16] = _enum_16; parse_map[_name_17] = _enum_17; parse_map[_name_18] = _enum_18; parse_map[_name_19] = _enum_19; parse_map[_name_20] = _enum_20; parse_map[_name_21] = _enum_21; parse_map[_name_22] = _enum_22; parse_map[_name_23] = _enum_23; return parse_map; }
#define DECLARE_ENUM_PARSE_INIT_24(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24)\
    private: static std::map<std::wstring, EnumType> InitParse() { std::map<std::wstring, EnumType> parse_map; parse_map[_name_1] = _enum_1; parse_map[_name_2] = _enum_2; parse_map[_name_3] = _enum_3; parse_map[_name_4] = _enum_4; parse_map[_name_5] = _enum_5; parse_map[_name_6] = _enum_6; parse_map[_name_7] = _enum_7; parse_map[_name_8] = _enum_8; parse_map[_name_9] = _enum_9; parse_map[_name_10] = _enum_10; parse_map[_name_11] = _enum_11; parse_map[_name_12] = _enum_12; parse_map[_name_13] = _enum_13; parse_map[_name_14] = _enum_14; parse_map[_name_15] = _enum_15; parse_map[_name_16] = _enum_16; parse_map[_name_17] = _enum_17; parse_map[_name_18] = _enum_18; parse_map[_name_19] = _enum_19; parse_map[_name_20] = _enum_20; parse_map[_name_21] = _enum_21; parse_map[_name_22] = _enum_22; parse_map[_name_23] = _enum_23; parse_map[_name_24] = _enum_24; return parse_map; }
#define DECLARE_ENUM_PARSE_INIT_25(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25)\
    private: static std::map<std::wstring, EnumType> InitParse() { std::map<std::wstring, EnumType> parse_map; parse_map[_name_1] = _enum_1; parse_map[_name_2] = _enum_2; parse_map[_name_3] = _enum_3; parse_map[_name_4] = _enum_4; parse_map[_name_5] = _enum_5; parse_map[_name_6] = _enum_6; parse_map[_name_7] = _enum_7; parse_map[_name_8] = _enum_8; parse_map[_name_9] = _enum_9; parse_map[_name_10] = _enum_10; parse_map[_name_11] = _enum_11; parse_map[_name_12] = _enum_12; parse_map[_name_13] = _enum_13; parse_map[_name_14] = _enum_14; parse_map[_name_15] = _enum_15; parse_map[_name_16] = _enum_16; parse_map[_name_17] = _enum_17; parse_map[_name_18] = _enum_18; parse_map[_name_19] = _enum_19; parse_map[_name_20] = _enum_20; parse_map[_name_21] = _enum_21; parse_map[_name_22] = _enum_22; parse_map[_name_23] = _enum_23; parse_map[_name_24] = _enum_24; parse_map[_name_25] = _enum_25; return parse_map; }
#define DECLARE_ENUM_PARSE_INIT_26(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26)\
    private: static std::map<std::wstring, EnumType> InitParse() { std::map<std::wstring, EnumType> parse_map; parse_map[_name_1] = _enum_1; parse_map[_name_2] = _enum_2; parse_map[_name_3] = _enum_3; parse_map[_name_4] = _enum_4; parse_map[_name_5] = _enum_5; parse_map[_name_6] = _enum_6; parse_map[_name_7] = _enum_7; parse_map[_name_8] = _enum_8; parse_map[_name_9] = _enum_9; parse_map[_name_10] = _enum_10; parse_map[_name_11] = _enum_11; parse_map[_name_12] = _enum_12; parse_map[_name_13] = _enum_13; parse_map[_name_14] = _enum_14; parse_map[_name_15] = _enum_15; parse_map[_name_16] = _enum_16; parse_map[_name_17] = _enum_17; parse_map[_name_18] = _enum_18; parse_map[_name_19] = _enum_19; parse_map[_name_20] = _enum_20; parse_map[_name_21] = _enum_21; parse_map[_name_22] = _enum_22; parse_map[_name_23] = _enum_23; parse_map[_name_24] = _enum_24; parse_map[_name_25] = _enum_25; parse_map[_name_26] = _enum_26; return parse_map; }
#define DECLARE_ENUM_PARSE_INIT_27(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27)\
    private: static std::map<std::wstring, EnumType> InitParse() { std::map<std::wstring, EnumType> parse_map; parse_map[_name_1] = _enum_1; parse_map[_name_2] = _enum_2; parse_map[_name_3] = _enum_3; parse_map[_name_4] = _enum_4; parse_map[_name_5] = _enum_5; parse_map[_name_6] = _enum_6; parse_map[_name_7] = _enum_7; parse_map[_name_8] = _enum_8; parse_map[_name_9] = _enum_9; parse_map[_name_10] = _enum_10; parse_map[_name_11] = _enum_11; parse_map[_name_12] = _enum_12; parse_map[_name_13] = _enum_13; parse_map[_name_14] = _enum_14; parse_map[_name_15] = _enum_15; parse_map[_name_16] = _enum_16; parse_map[_name_17] = _enum_17; parse_map[_name_18] = _enum_18; parse_map[_name_19] = _enum_19; parse_map[_name_20] = _enum_20; parse_map[_name_21] = _enum_21; parse_map[_name_22] = _enum_22; parse_map[_name_23] = _enum_23; parse_map[_name_24] = _enum_24; parse_map[_name_25] = _enum_25; parse_map[_name_26] = _enum_26; parse_map[_name_27] = _enum_27; return parse_map; }
#define DECLARE_ENUM_PARSE_INIT_28(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28)\
    private: static std::map<std::wstring, EnumType> InitParse() { std::map<std::wstring, EnumType> parse_map; parse_map[_name_1] = _enum_1; parse_map[_name_2] = _enum_2; parse_map[_name_3] = _enum_3; parse_map[_name_4] = _enum_4; parse_map[_name_5] = _enum_5; parse_map[_name_6] = _enum_6; parse_map[_name_7] = _enum_7; parse_map[_name_8] = _enum_8; parse_map[_name_9] = _enum_9; parse_map[_name_10] = _enum_10; parse_map[_name_11] = _enum_11; parse_map[_name_12] = _enum_12; parse_map[_name_13] = _enum_13; parse_map[_name_14] = _enum_14; parse_map[_name_15] = _enum_15; parse_map[_name_16] = _enum_16; parse_map[_name_17] = _enum_17; parse_map[_name_18] = _enum_18; parse_map[_name_19] = _enum_19; parse_map[_name_20] = _enum_20; parse_map[_name_21] = _enum_21; parse_map[_name_22] = _enum_22; parse_map[_name_23] = _enum_23; parse_map[_name_24] = _enum_24; parse_map[_name_25] = _enum_25; parse_map[_name_26] = _enum_26; parse_map[_name_27] = _enum_27; parse_map[_name_28] = _enum_28; return parse_map; }
#define DECLARE_ENUM_PARSE_INIT_29(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29)\
    private: static std::map<std::wstring, EnumType> InitParse() { std::map<std::wstring, EnumType> parse_map; parse_map[_name_1] = _enum_1; parse_map[_name_2] = _enum_2; parse_map[_name_3] = _enum_3; parse_map[_name_4] = _enum_4; parse_map[_name_5] = _enum_5; parse_map[_name_6] = _enum_6; parse_map[_name_7] = _enum_7; parse_map[_name_8] = _enum_8; parse_map[_name_9] = _enum_9; parse_map[_name_10] = _enum_10; parse_map[_name_11] = _enum_11; parse_map[_name_12] = _enum_12; parse_map[_name_13] = _enum_13; parse_map[_name_14] = _enum_14; parse_map[_name_15] = _enum_15; parse_map[_name_16] = _enum_16; parse_map[_name_17] = _enum_17; parse_map[_name_18] = _enum_18; parse_map[_name_19] = _enum_19; parse_map[_name_20] = _enum_20; parse_map[_name_21] = _enum_21; parse_map[_name_22] = _enum_22; parse_map[_name_23] = _enum_23; parse_map[_name_24] = _enum_24; parse_map[_name_25] = _enum_25; parse_map[_name_26] = _enum_26; parse_map[_name_27] = _enum_27; parse_map[_name_28] = _enum_28; parse_map[_name_29] = _enum_29; return parse_map; }
#define DECLARE_ENUM_PARSE_INIT_30(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30)\
    private: static std::map<std::wstring, EnumType> InitParse() { std::map<std::wstring, EnumType> parse_map; parse_map[_name_1] = _enum_1; parse_map[_name_2] = _enum_2; parse_map[_name_3] = _enum_3; parse_map[_name_4] = _enum_4; parse_map[_name_5] = _enum_5; parse_map[_name_6] = _enum_6; parse_map[_name_7] = _enum_7; parse_map[_name_8] = _enum_8; parse_map[_name_9] = _enum_9; parse_map[_name_10] = _enum_10; parse_map[_name_11] = _enum_11; parse_map[_name_12] = _enum_12; parse_map[_name_13] = _enum_13; parse_map[_name_14] = _enum_14; parse_map[_name_15] = _enum_15; parse_map[_name_16] = _enum_16; parse_map[_name_17] = _enum_17; parse_map[_name_18] = _enum_18; parse_map[_name_19] = _enum_19; parse_map[_name_20] = _enum_20; parse_map[_name_21] = _enum_21; parse_map[_name_22] = _enum_22; parse_map[_name_23] = _enum_23; parse_map[_name_24] = _enum_24; parse_map[_name_25] = _enum_25; parse_map[_name_26] = _enum_26; parse_map[_name_27] = _enum_27; parse_map[_name_28] = _enum_28; parse_map[_name_29] = _enum_29; parse_map[_name_30] = _enum_30; return parse_map; }
#define DECLARE_ENUM_PARSE_INIT_31(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31)\
    private: static std::map<std::wstring, EnumType> InitParse() { std::map<std::wstring, EnumType> parse_map; parse_map[_name_1] = _enum_1; parse_map[_name_2] = _enum_2; parse_map[_name_3] = _enum_3; parse_map[_name_4] = _enum_4; parse_map[_name_5] = _enum_5; parse_map[_name_6] = _enum_6; parse_map[_name_7] = _enum_7; parse_map[_name_8] = _enum_8; parse_map[_name_9] = _enum_9; parse_map[_name_10] = _enum_10; parse_map[_name_11] = _enum_11; parse_map[_name_12] = _enum_12; parse_map[_name_13] = _enum_13; parse_map[_name_14] = _enum_14; parse_map[_name_15] = _enum_15; parse_map[_name_16] = _enum_16; parse_map[_name_17] = _enum_17; parse_map[_name_18] = _enum_18; parse_map[_name_19] = _enum_19; parse_map[_name_20] = _enum_20; parse_map[_name_21] = _enum_21; parse_map[_name_22] = _enum_22; parse_map[_name_23] = _enum_23; parse_map[_name_24] = _enum_24; parse_map[_name_25] = _enum_25; parse_map[_name_26] = _enum_26; parse_map[_name_27] = _enum_27; parse_map[_name_28] = _enum_28; parse_map[_name_29] = _enum_29; parse_map[_name_30] = _enum_30; parse_map[_name_31] = _enum_31; return parse_map; }
#define DECLARE_ENUM_PARSE_INIT_32(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32)\
    private: static std::map<std::wstring, EnumType> InitParse() { std::map<std::wstring, EnumType> parse_map; parse_map[_name_1] = _enum_1; parse_map[_name_2] = _enum_2; parse_map[_name_3] = _enum_3; parse_map[_name_4] = _enum_4; parse_map[_name_5] = _enum_5; parse_map[_name_6] = _enum_6; parse_map[_name_7] = _enum_7; parse_map[_name_8] = _enum_8; parse_map[_name_9] = _enum_9; parse_map[_name_10] = _enum_10; parse_map[_name_11] = _enum_11; parse_map[_name_12] = _enum_12; parse_map[_name_13] = _enum_13; parse_map[_name_14] = _enum_14; parse_map[_name_15] = _enum_15; parse_map[_name_16] = _enum_16; parse_map[_name_17] = _enum_17; parse_map[_name_18] = _enum_18; parse_map[_name_19] = _enum_19; parse_map[_name_20] = _enum_20; parse_map[_name_21] = _enum_21; parse_map[_name_22] = _enum_22; parse_map[_name_23] = _enum_23; parse_map[_name_24] = _enum_24; parse_map[_name_25] = _enum_25; parse_map[_name_26] = _enum_26; parse_map[_name_27] = _enum_27; parse_map[_name_28] = _enum_28; parse_map[_name_29] = _enum_29; parse_map[_name_30] = _enum_30; parse_map[_name_31] = _enum_31; parse_map[_name_32] = _enum_32; return parse_map; }
#define DECLARE_ENUM_PARSE_INIT_33(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33)\
    private: static std::map<std::wstring, EnumType> InitParse() { std::map<std::wstring, EnumType> parse_map; parse_map[_name_1] = _enum_1; parse_map[_name_2] = _enum_2; parse_map[_name_3] = _enum_3; parse_map[_name_4] = _enum_4; parse_map[_name_5] = _enum_5; parse_map[_name_6] = _enum_6; parse_map[_name_7] = _enum_7; parse_map[_name_8] = _enum_8; parse_map[_name_9] = _enum_9; parse_map[_name_10] = _enum_10; parse_map[_name_11] = _enum_11; parse_map[_name_12] = _enum_12; parse_map[_name_13] = _enum_13; parse_map[_name_14] = _enum_14; parse_map[_name_15] = _enum_15; parse_map[_name_16] = _enum_16; parse_map[_name_17] = _enum_17; parse_map[_name_18] = _enum_18; parse_map[_name_19] = _enum_19; parse_map[_name_20] = _enum_20; parse_map[_name_21] = _enum_21; parse_map[_name_22] = _enum_22; parse_map[_name_23] = _enum_23; parse_map[_name_24] = _enum_24; parse_map[_name_25] = _enum_25; parse_map[_name_26] = _enum_26; parse_map[_name_27] = _enum_27; parse_map[_name_28] = _enum_28; parse_map[_name_29] = _enum_29; parse_map[_name_30] = _enum_30; parse_map[_name_31] = _enum_31; parse_map[_name_32] = _enum_32; parse_map[_name_33] = _enum_33; return parse_map; }
#define DECLARE_ENUM_PARSE_INIT_34(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33, _enum_34, _name_34)\
    private: static std::map<std::wstring, EnumType> InitParse() { std::map<std::wstring, EnumType> parse_map; parse_map[_name_1] = _enum_1; parse_map[_name_2] = _enum_2; parse_map[_name_3] = _enum_3; parse_map[_name_4] = _enum_4; parse_map[_name_5] = _enum_5; parse_map[_name_6] = _enum_6; parse_map[_name_7] = _enum_7; parse_map[_name_8] = _enum_8; parse_map[_name_9] = _enum_9; parse_map[_name_10] = _enum_10; parse_map[_name_11] = _enum_11; parse_map[_name_12] = _enum_12; parse_map[_name_13] = _enum_13; parse_map[_name_14] = _enum_14; parse_map[_name_15] = _enum_15; parse_map[_name_16] = _enum_16; parse_map[_name_17] = _enum_17; parse_map[_name_18] = _enum_18; parse_map[_name_19] = _enum_19; parse_map[_name_20] = _enum_20; parse_map[_name_21] = _enum_21; parse_map[_name_22] = _enum_22; parse_map[_name_23] = _enum_23; parse_map[_name_24] = _enum_24; parse_map[_name_25] = _enum_25; parse_map[_name_26] = _enum_26; parse_map[_name_27] = _enum_27; parse_map[_name_28] = _enum_28; parse_map[_name_29] = _enum_29; parse_map[_name_30] = _enum_30; parse_map[_name_31] = _enum_31; parse_map[_name_32] = _enum_32; parse_map[_name_33] = _enum_33; parse_map[_name_34] = _enum_34; return parse_map; }
#define DECLARE_ENUM_PARSE_INIT_35(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33, _enum_34, _name_34, _enum_35, _name_35)\
    private: static std::map<std::wstring, EnumType> InitParse() { std::map<std::wstring, EnumType> parse_map; parse_map[_name_1] = _enum_1; parse_map[_name_2] = _enum_2; parse_map[_name_3] = _enum_3; parse_map[_name_4] = _enum_4; parse_map[_name_5] = _enum_5; parse_map[_name_6] = _enum_6; parse_map[_name_7] = _enum_7; parse_map[_name_8] = _enum_8; parse_map[_name_9] = _enum_9; parse_map[_name_10] = _enum_10; parse_map[_name_11] = _enum_11; parse_map[_name_12] = _enum_12; parse_map[_name_13] = _enum_13; parse_map[_name_14] = _enum_14; parse_map[_name_15] = _enum_15; parse_map[_name_16] = _enum_16; parse_map[_name_17] = _enum_17; parse_map[_name_18] = _enum_18; parse_map[_name_19] = _enum_19; parse_map[_name_20] = _enum_20; parse_map[_name_21] = _enum_21; parse_map[_name_22] = _enum_22; parse_map[_name_23] = _enum_23; parse_map[_name_24] = _enum_24; parse_map[_name_25] = _enum_25; parse_map[_name_26] = _enum_26; parse_map[_name_27] = _enum_27; parse_map[_name_28] = _enum_28; parse_map[_name_29] = _enum_29; parse_map[_name_30] = _enum_30; parse_map[_name_31] = _enum_31; parse_map[_name_32] = _enum_32; parse_map[_name_33] = _enum_33; parse_map[_name_34] = _enum_34; parse_map[_name_35] = _enum_35; return parse_map; }
#define DECLARE_ENUM_PARSE_INIT_36(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33, _enum_34, _name_34, _enum_35, _name_35, _enum_36, _name_36)\
    private: static std::map<std::wstring, EnumType> InitParse() { std::map<std::wstring, EnumType> parse_map; parse_map[_name_1] = _enum_1; parse_map[_name_2] = _enum_2; parse_map[_name_3] = _enum_3; parse_map[_name_4] = _enum_4; parse_map[_name_5] = _enum_5; parse_map[_name_6] = _enum_6; parse_map[_name_7] = _enum_7; parse_map[_name_8] = _enum_8; parse_map[_name_9] = _enum_9; parse_map[_name_10] = _enum_10; parse_map[_name_11] = _enum_11; parse_map[_name_12] = _enum_12; parse_map[_name_13] = _enum_13; parse_map[_name_14] = _enum_14; parse_map[_name_15] = _enum_15; parse_map[_name_16] = _enum_16; parse_map[_name_17] = _enum_17; parse_map[_name_18] = _enum_18; parse_map[_name_19] = _enum_19; parse_map[_name_20] = _enum_20; parse_map[_name_21] = _enum_21; parse_map[_name_22] = _enum_22; parse_map[_name_23] = _enum_23; parse_map[_name_24] = _enum_24; parse_map[_name_25] = _enum_25; parse_map[_name_26] = _enum_26; parse_map[_name_27] = _enum_27; parse_map[_name_28] = _enum_28; parse_map[_name_29] = _enum_29; parse_map[_name_30] = _enum_30; parse_map[_name_31] = _enum_31; parse_map[_name_32] = _enum_32; parse_map[_name_33] = _enum_33; parse_map[_name_34] = _enum_34; parse_map[_name_35] = _enum_35; parse_map[_name_36] = _enum_36; return parse_map; }
#define DECLARE_ENUM_PARSE_INIT_37(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33, _enum_34, _name_34, _enum_35, _name_35, _enum_36, _name_36, _enum_37, _name_37)\
    private: static std::map<std::wstring, EnumType> InitParse() { std::map<std::wstring, EnumType> parse_map; parse_map[_name_1] = _enum_1; parse_map[_name_2] = _enum_2; parse_map[_name_3] = _enum_3; parse_map[_name_4] = _enum_4; parse_map[_name_5] = _enum_5; parse_map[_name_6] = _enum_6; parse_map[_name_7] = _enum_7; parse_map[_name_8] = _enum_8; parse_map[_name_9] = _enum_9; parse_map[_name_10] = _enum_10; parse_map[_name_11] = _enum_11; parse_map[_name_12] = _enum_12; parse_map[_name_13] = _enum_13; parse_map[_name_14] = _enum_14; parse_map[_name_15] = _enum_15; parse_map[_name_16] = _enum_16; parse_map[_name_17] = _enum_17; parse_map[_name_18] = _enum_18; parse_map[_name_19] = _enum_19; parse_map[_name_20] = _enum_20; parse_map[_name_21] = _enum_21; parse_map[_name_22] = _enum_22; parse_map[_name_23] = _enum_23; parse_map[_name_24] = _enum_24; parse_map[_name_25] = _enum_25; parse_map[_name_26] = _enum_26; parse_map[_name_27] = _enum_27; parse_map[_name_28] = _enum_28; parse_map[_name_29] = _enum_29; parse_map[_name_30] = _enum_30; parse_map[_name_31] = _enum_31; parse_map[_name_32] = _enum_32; parse_map[_name_33] = _enum_33; parse_map[_name_34] = _enum_34; parse_map[_name_35] = _enum_35; parse_map[_name_36] = _enum_36; parse_map[_name_37] = _enum_37; return parse_map; }
#define DECLARE_ENUM_PARSE_INIT_38(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33, _enum_34, _name_34, _enum_35, _name_35, _enum_36, _name_36, _enum_37, _name_37, _enum_38, _name_38)\
    private: static std::map<std::wstring, EnumType> InitParse() { std::map<std::wstring, EnumType> parse_map; parse_map[_name_1] = _enum_1; parse_map[_name_2] = _enum_2; parse_map[_name_3] = _enum_3; parse_map[_name_4] = _enum_4; parse_map[_name_5] = _enum_5; parse_map[_name_6] = _enum_6; parse_map[_name_7] = _enum_7; parse_map[_name_8] = _enum_8; parse_map[_name_9] = _enum_9; parse_map[_name_10] = _enum_10; parse_map[_name_11] = _enum_11; parse_map[_name_12] = _enum_12; parse_map[_name_13] = _enum_13; parse_map[_name_14] = _enum_14; parse_map[_name_15] = _enum_15; parse_map[_name_16] = _enum_16; parse_map[_name_17] = _enum_17; parse_map[_name_18] = _enum_18; parse_map[_name_19] = _enum_19; parse_map[_name_20] = _enum_20; parse_map[_name_21] = _enum_21; parse_map[_name_22] = _enum_22; parse_map[_name_23] = _enum_23; parse_map[_name_24] = _enum_24; parse_map[_name_25] = _enum_25; parse_map[_name_26] = _enum_26; parse_map[_name_27] = _enum_27; parse_map[_name_28] = _enum_28; parse_map[_name_29] = _enum_29; parse_map[_name_30] = _enum_30; parse_map[_name_31] = _enum_31; parse_map[_name_32] = _enum_32; parse_map[_name_33] = _enum_33; parse_map[_name_34] = _enum_34; parse_map[_name_35] = _enum_35; parse_map[_name_36] = _enum_36; parse_map[_name_37] = _enum_37; parse_map[_name_38] = _enum_38; return parse_map; }
#define DECLARE_ENUM_PARSE_INIT_39(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33, _enum_34, _name_34, _enum_35, _name_35, _enum_36, _name_36, _enum_37, _name_37, _enum_38, _name_38, _enum_39, _name_39)\
    private: static std::map<std::wstring, EnumType> InitParse() { std::map<std::wstring, EnumType> parse_map; parse_map[_name_1] = _enum_1; parse_map[_name_2] = _enum_2; parse_map[_name_3] = _enum_3; parse_map[_name_4] = _enum_4; parse_map[_name_5] = _enum_5; parse_map[_name_6] = _enum_6; parse_map[_name_7] = _enum_7; parse_map[_name_8] = _enum_8; parse_map[_name_9] = _enum_9; parse_map[_name_10] = _enum_10; parse_map[_name_11] = _enum_11; parse_map[_name_12] = _enum_12; parse_map[_name_13] = _enum_13; parse_map[_name_14] = _enum_14; parse_map[_name_15] = _enum_15; parse_map[_name_16] = _enum_16; parse_map[_name_17] = _enum_17; parse_map[_name_18] = _enum_18; parse_map[_name_19] = _enum_19; parse_map[_name_20] = _enum_20; parse_map[_name_21] = _enum_21; parse_map[_name_22] = _enum_22; parse_map[_name_23] = _enum_23; parse_map[_name_24] = _enum_24; parse_map[_name_25] = _enum_25; parse_map[_name_26] = _enum_26; parse_map[_name_27] = _enum_27; parse_map[_name_28] = _enum_28; parse_map[_name_29] = _enum_29; parse_map[_name_30] = _enum_30; parse_map[_name_31] = _enum_31; parse_map[_name_32] = _enum_32; parse_map[_name_33] = _enum_33; parse_map[_name_34] = _enum_34; parse_map[_name_35] = _enum_35; parse_map[_name_36] = _enum_36; parse_map[_name_37] = _enum_37; parse_map[_name_38] = _enum_38; parse_map[_name_39] = _enum_39; return parse_map; }
#define DECLARE_ENUM_PARSE_INIT_40(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33, _enum_34, _name_34, _enum_35, _name_35, _enum_36, _name_36, _enum_37, _name_37, _enum_38, _name_38, _enum_39, _name_39, _enum_40, _name_40)\
    private: static std::map<std::wstring, EnumType> InitParse() { std::map<std::wstring, EnumType> parse_map; parse_map[_name_1] = _enum_1; parse_map[_name_2] = _enum_2; parse_map[_name_3] = _enum_3; parse_map[_name_4] = _enum_4; parse_map[_name_5] = _enum_5; parse_map[_name_6] = _enum_6; parse_map[_name_7] = _enum_7; parse_map[_name_8] = _enum_8; parse_map[_name_9] = _enum_9; parse_map[_name_10] = _enum_10; parse_map[_name_11] = _enum_11; parse_map[_name_12] = _enum_12; parse_map[_name_13] = _enum_13; parse_map[_name_14] = _enum_14; parse_map[_name_15] = _enum_15; parse_map[_name_16] = _enum_16; parse_map[_name_17] = _enum_17; parse_map[_name_18] = _enum_18; parse_map[_name_19] = _enum_19; parse_map[_name_20] = _enum_20; parse_map[_name_21] = _enum_21; parse_map[_name_22] = _enum_22; parse_map[_name_23] = _enum_23; parse_map[_name_24] = _enum_24; parse_map[_name_25] = _enum_25; parse_map[_name_26] = _enum_26; parse_map[_name_27] = _enum_27; parse_map[_name_28] = _enum_28; parse_map[_name_29] = _enum_29; parse_map[_name_30] = _enum_30; parse_map[_name_31] = _enum_31; parse_map[_name_32] = _enum_32; parse_map[_name_33] = _enum_33; parse_map[_name_34] = _enum_34; parse_map[_name_35] = _enum_35; parse_map[_name_36] = _enum_36; parse_map[_name_37] = _enum_37; parse_map[_name_38] = _enum_38; parse_map[_name_39] = _enum_39; parse_map[_name_40] = _enum_40; return parse_map; }
#define DECLARE_ENUM_PARSE_INIT_41(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33, _enum_34, _name_34, _enum_35, _name_35, _enum_36, _name_36, _enum_37, _name_37, _enum_38, _name_38, _enum_39, _name_39, _enum_40, _name_40, _enum_41, _name_41)\
    private: static std::map<std::wstring, EnumType> InitParse() { std::map<std::wstring, EnumType> parse_map; parse_map[_name_1] = _enum_1; parse_map[_name_2] = _enum_2; parse_map[_name_3] = _enum_3; parse_map[_name_4] = _enum_4; parse_map[_name_5] = _enum_5; parse_map[_name_6] = _enum_6; parse_map[_name_7] = _enum_7; parse_map[_name_8] = _enum_8; parse_map[_name_9] = _enum_9; parse_map[_name_10] = _enum_10; parse_map[_name_11] = _enum_11; parse_map[_name_12] = _enum_12; parse_map[_name_13] = _enum_13; parse_map[_name_14] = _enum_14; parse_map[_name_15] = _enum_15; parse_map[_name_16] = _enum_16; parse_map[_name_17] = _enum_17; parse_map[_name_18] = _enum_18; parse_map[_name_19] = _enum_19; parse_map[_name_20] = _enum_20; parse_map[_name_21] = _enum_21; parse_map[_name_22] = _enum_22; parse_map[_name_23] = _enum_23; parse_map[_name_24] = _enum_24; parse_map[_name_25] = _enum_25; parse_map[_name_26] = _enum_26; parse_map[_name_27] = _enum_27; parse_map[_name_28] = _enum_28; parse_map[_name_29] = _enum_29; parse_map[_name_30] = _enum_30; parse_map[_name_31] = _enum_31; parse_map[_name_32] = _enum_32; parse_map[_name_33] = _enum_33; parse_map[_name_34] = _enum_34; parse_map[_name_35] = _enum_35; parse_map[_name_36] = _enum_36; parse_map[_name_37] = _enum_37; parse_map[_name_38] = _enum_38; parse_map[_name_39] = _enum_39; parse_map[_name_40] = _enum_40; parse_map[_name_41] = _enum_41; return parse_map; }
#define DECLARE_ENUM_PARSE_INIT_42(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33, _enum_34, _name_34, _enum_35, _name_35, _enum_36, _name_36, _enum_37, _name_37, _enum_38, _name_38, _enum_39, _name_39, _enum_40, _name_40, _enum_41, _name_41, _enum_42, _name_42)\
    private: static std::map<std::wstring, EnumType> InitParse() { std::map<std::wstring, EnumType> parse_map; parse_map[_name_1] = _enum_1; parse_map[_name_2] = _enum_2; parse_map[_name_3] = _enum_3; parse_map[_name_4] = _enum_4; parse_map[_name_5] = _enum_5; parse_map[_name_6] = _enum_6; parse_map[_name_7] = _enum_7; parse_map[_name_8] = _enum_8; parse_map[_name_9] = _enum_9; parse_map[_name_10] = _enum_10; parse_map[_name_11] = _enum_11; parse_map[_name_12] = _enum_12; parse_map[_name_13] = _enum_13; parse_map[_name_14] = _enum_14; parse_map[_name_15] = _enum_15; parse_map[_name_16] = _enum_16; parse_map[_name_17] = _enum_17; parse_map[_name_18] = _enum_18; parse_map[_name_19] = _enum_19; parse_map[_name_20] = _enum_20; parse_map[_name_21] = _enum_21; parse_map[_name_22] = _enum_22; parse_map[_name_23] = _enum_23; parse_map[_name_24] = _enum_24; parse_map[_name_25] = _enum_25; parse_map[_name_26] = _enum_26; parse_map[_name_27] = _enum_27; parse_map[_name_28] = _enum_28; parse_map[_name_29] = _enum_29; parse_map[_name_30] = _enum_30; parse_map[_name_31] = _enum_31; parse_map[_name_32] = _enum_32; parse_map[_name_33] = _enum_33; parse_map[_name_34] = _enum_34; parse_map[_name_35] = _enum_35; parse_map[_name_36] = _enum_36; parse_map[_name_37] = _enum_37; parse_map[_name_38] = _enum_38; parse_map[_name_39] = _enum_39; parse_map[_name_40] = _enum_40; parse_map[_name_41] = _enum_41; parse_map[_name_42] = _enum_42; return parse_map; }
#define DECLARE_ENUM_PARSE_INIT_43(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33, _enum_34, _name_34, _enum_35, _name_35, _enum_36, _name_36, _enum_37, _name_37, _enum_38, _name_38, _enum_39, _name_39, _enum_40, _name_40, _enum_41, _name_41, _enum_42, _name_42, _enum_43, _name_43)\
    private: static std::map<std::wstring, EnumType> InitParse() { std::map<std::wstring, EnumType> parse_map; parse_map[_name_1] = _enum_1; parse_map[_name_2] = _enum_2; parse_map[_name_3] = _enum_3; parse_map[_name_4] = _enum_4; parse_map[_name_5] = _enum_5; parse_map[_name_6] = _enum_6; parse_map[_name_7] = _enum_7; parse_map[_name_8] = _enum_8; parse_map[_name_9] = _enum_9; parse_map[_name_10] = _enum_10; parse_map[_name_11] = _enum_11; parse_map[_name_12] = _enum_12; parse_map[_name_13] = _enum_13; parse_map[_name_14] = _enum_14; parse_map[_name_15] = _enum_15; parse_map[_name_16] = _enum_16; parse_map[_name_17] = _enum_17; parse_map[_name_18] = _enum_18; parse_map[_name_19] = _enum_19; parse_map[_name_20] = _enum_20; parse_map[_name_21] = _enum_21; parse_map[_name_22] = _enum_22; parse_map[_name_23] = _enum_23; parse_map[_name_24] = _enum_24; parse_map[_name_25] = _enum_25; parse_map[_name_26] = _enum_26; parse_map[_name_27] = _enum_27; parse_map[_name_28] = _enum_28; parse_map[_name_29] = _enum_29; parse_map[_name_30] = _enum_30; parse_map[_name_31] = _enum_31; parse_map[_name_32] = _enum_32; parse_map[_name_33] = _enum_33; parse_map[_name_34] = _enum_34; parse_map[_name_35] = _enum_35; parse_map[_name_36] = _enum_36; parse_map[_name_37] = _enum_37; parse_map[_name_38] = _enum_38; parse_map[_name_39] = _enum_39; parse_map[_name_40] = _enum_40; parse_map[_name_41] = _enum_41; parse_map[_name_42] = _enum_42; parse_map[_name_43] = _enum_43; return parse_map; }
#define DECLARE_ENUM_PARSE_INIT_44(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33, _enum_34, _name_34, _enum_35, _name_35, _enum_36, _name_36, _enum_37, _name_37, _enum_38, _name_38, _enum_39, _name_39, _enum_40, _name_40, _enum_41, _name_41, _enum_42, _name_42, _enum_43, _name_43, _enum_44, _name_44)\
    private: static std::map<std::wstring, EnumType> InitParse() { std::map<std::wstring, EnumType> parse_map; parse_map[_name_1] = _enum_1; parse_map[_name_2] = _enum_2; parse_map[_name_3] = _enum_3; parse_map[_name_4] = _enum_4; parse_map[_name_5] = _enum_5; parse_map[_name_6] = _enum_6; parse_map[_name_7] = _enum_7; parse_map[_name_8] = _enum_8; parse_map[_name_9] = _enum_9; parse_map[_name_10] = _enum_10; parse_map[_name_11] = _enum_11; parse_map[_name_12] = _enum_12; parse_map[_name_13] = _enum_13; parse_map[_name_14] = _enum_14; parse_map[_name_15] = _enum_15; parse_map[_name_16] = _enum_16; parse_map[_name_17] = _enum_17; parse_map[_name_18] = _enum_18; parse_map[_name_19] = _enum_19; parse_map[_name_20] = _enum_20; parse_map[_name_21] = _enum_21; parse_map[_name_22] = _enum_22; parse_map[_name_23] = _enum_23; parse_map[_name_24] = _enum_24; parse_map[_name_25] = _enum_25; parse_map[_name_26] = _enum_26; parse_map[_name_27] = _enum_27; parse_map[_name_28] = _enum_28; parse_map[_name_29] = _enum_29; parse_map[_name_30] = _enum_30; parse_map[_name_31] = _enum_31; parse_map[_name_32] = _enum_32; parse_map[_name_33] = _enum_33; parse_map[_name_34] = _enum_34; parse_map[_name_35] = _enum_35; parse_map[_name_36] = _enum_36; parse_map[_name_37] = _enum_37; parse_map[_name_38] = _enum_38; parse_map[_name_39] = _enum_39; parse_map[_name_40] = _enum_40; parse_map[_name_41] = _enum_41; parse_map[_name_42] = _enum_42; parse_map[_name_43] = _enum_43; parse_map[_name_44] = _enum_44; return parse_map; }
#define DECLARE_ENUM_PARSE_INIT_45(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33, _enum_34, _name_34, _enum_35, _name_35, _enum_36, _name_36, _enum_37, _name_37, _enum_38, _name_38, _enum_39, _name_39, _enum_40, _name_40, _enum_41, _name_41, _enum_42, _name_42, _enum_43, _name_43, _enum_44, _name_44, _enum_45, _name_45)\
    private: static std::map<std::wstring, EnumType> InitParse() { std::map<std::wstring, EnumType> parse_map; parse_map[_name_1] = _enum_1; parse_map[_name_2] = _enum_2; parse_map[_name_3] = _enum_3; parse_map[_name_4] = _enum_4; parse_map[_name_5] = _enum_5; parse_map[_name_6] = _enum_6; parse_map[_name_7] = _enum_7; parse_map[_name_8] = _enum_8; parse_map[_name_9] = _enum_9; parse_map[_name_10] = _enum_10; parse_map[_name_11] = _enum_11; parse_map[_name_12] = _enum_12; parse_map[_name_13] = _enum_13; parse_map[_name_14] = _enum_14; parse_map[_name_15] = _enum_15; parse_map[_name_16] = _enum_16; parse_map[_name_17] = _enum_17; parse_map[_name_18] = _enum_18; parse_map[_name_19] = _enum_19; parse_map[_name_20] = _enum_20; parse_map[_name_21] = _enum_21; parse_map[_name_22] = _enum_22; parse_map[_name_23] = _enum_23; parse_map[_name_24] = _enum_24; parse_map[_name_25] = _enum_25; parse_map[_name_26] = _enum_26; parse_map[_name_27] = _enum_27; parse_map[_name_28] = _enum_28; parse_map[_name_29] = _enum_29; parse_map[_name_30] = _enum_30; parse_map[_name_31] = _enum_31; parse_map[_name_32] = _enum_32; parse_map[_name_33] = _enum_33; parse_map[_name_34] = _enum_34; parse_map[_name_35] = _enum_35; parse_map[_name_36] = _enum_36; parse_map[_name_37] = _enum_37; parse_map[_name_38] = _enum_38; parse_map[_name_39] = _enum_39; parse_map[_name_40] = _enum_40; parse_map[_name_41] = _enum_41; parse_map[_name_42] = _enum_42; parse_map[_name_43] = _enum_43; parse_map[_name_44] = _enum_44; parse_map[_name_45] = _enum_45; return parse_map; }
#define DECLARE_ENUM_PARSE_INIT_46(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33, _enum_34, _name_34, _enum_35, _name_35, _enum_36, _name_36, _enum_37, _name_37, _enum_38, _name_38, _enum_39, _name_39, _enum_40, _name_40, _enum_41, _name_41, _enum_42, _name_42, _enum_43, _name_43, _enum_44, _name_44, _enum_45, _name_45, _enum_46, _name_46)\
    private: static std::map<std::wstring, EnumType> InitParse() { std::map<std::wstring, EnumType> parse_map; parse_map[_name_1] = _enum_1; parse_map[_name_2] = _enum_2; parse_map[_name_3] = _enum_3; parse_map[_name_4] = _enum_4; parse_map[_name_5] = _enum_5; parse_map[_name_6] = _enum_6; parse_map[_name_7] = _enum_7; parse_map[_name_8] = _enum_8; parse_map[_name_9] = _enum_9; parse_map[_name_10] = _enum_10; parse_map[_name_11] = _enum_11; parse_map[_name_12] = _enum_12; parse_map[_name_13] = _enum_13; parse_map[_name_14] = _enum_14; parse_map[_name_15] = _enum_15; parse_map[_name_16] = _enum_16; parse_map[_name_17] = _enum_17; parse_map[_name_18] = _enum_18; parse_map[_name_19] = _enum_19; parse_map[_name_20] = _enum_20; parse_map[_name_21] = _enum_21; parse_map[_name_22] = _enum_22; parse_map[_name_23] = _enum_23; parse_map[_name_24] = _enum_24; parse_map[_name_25] = _enum_25; parse_map[_name_26] = _enum_26; parse_map[_name_27] = _enum_27; parse_map[_name_28] = _enum_28; parse_map[_name_29] = _enum_29; parse_map[_name_30] = _enum_30; parse_map[_name_31] = _enum_31; parse_map[_name_32] = _enum_32; parse_map[_name_33] = _enum_33; parse_map[_name_34] = _enum_34; parse_map[_name_35] = _enum_35; parse_map[_name_36] = _enum_36; parse_map[_name_37] = _enum_37; parse_map[_name_38] = _enum_38; parse_map[_name_39] = _enum_39; parse_map[_name_40] = _enum_40; parse_map[_name_41] = _enum_41; parse_map[_name_42] = _enum_42; parse_map[_name_43] = _enum_43; parse_map[_name_44] = _enum_44; parse_map[_name_45] = _enum_45; parse_map[_name_46] = _enum_46; return parse_map; }
#define DECLARE_ENUM_PARSE_INIT_47(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33, _enum_34, _name_34, _enum_35, _name_35, _enum_36, _name_36, _enum_37, _name_37, _enum_38, _name_38, _enum_39, _name_39, _enum_40, _name_40, _enum_41, _name_41, _enum_42, _name_42, _enum_43, _name_43, _enum_44, _name_44, _enum_45, _name_45, _enum_46, _name_46, _enum_47, _name_47)\
    private: static std::map<std::wstring, EnumType> InitParse() { std::map<std::wstring, EnumType> parse_map; parse_map[_name_1] = _enum_1; parse_map[_name_2] = _enum_2; parse_map[_name_3] = _enum_3; parse_map[_name_4] = _enum_4; parse_map[_name_5] = _enum_5; parse_map[_name_6] = _enum_6; parse_map[_name_7] = _enum_7; parse_map[_name_8] = _enum_8; parse_map[_name_9] = _enum_9; parse_map[_name_10] = _enum_10; parse_map[_name_11] = _enum_11; parse_map[_name_12] = _enum_12; parse_map[_name_13] = _enum_13; parse_map[_name_14] = _enum_14; parse_map[_name_15] = _enum_15; parse_map[_name_16] = _enum_16; parse_map[_name_17] = _enum_17; parse_map[_name_18] = _enum_18; parse_map[_name_19] = _enum_19; parse_map[_name_20] = _enum_20; parse_map[_name_21] = _enum_21; parse_map[_name_22] = _enum_22; parse_map[_name_23] = _enum_23; parse_map[_name_24] = _enum_24; parse_map[_name_25] = _enum_25; parse_map[_name_26] = _enum_26; parse_map[_name_27] = _enum_27; parse_map[_name_28] = _enum_28; parse_map[_name_29] = _enum_29; parse_map[_name_30] = _enum_30; parse_map[_name_31] = _enum_31; parse_map[_name_32] = _enum_32; parse_map[_name_33] = _enum_33; parse_map[_name_34] = _enum_34; parse_map[_name_35] = _enum_35; parse_map[_name_36] = _enum_36; parse_map[_name_37] = _enum_37; parse_map[_name_38] = _enum_38; parse_map[_name_39] = _enum_39; parse_map[_name_40] = _enum_40; parse_map[_name_41] = _enum_41; parse_map[_name_42] = _enum_42; parse_map[_name_43] = _enum_43; parse_map[_name_44] = _enum_44; parse_map[_name_45] = _enum_45; parse_map[_name_46] = _enum_46; parse_map[_name_47] = _enum_47; return parse_map; }
#define DECLARE_ENUM_PARSE_INIT_48(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33, _enum_34, _name_34, _enum_35, _name_35, _enum_36, _name_36, _enum_37, _name_37, _enum_38, _name_38, _enum_39, _name_39, _enum_40, _name_40, _enum_41, _name_41, _enum_42, _name_42, _enum_43, _name_43, _enum_44, _name_44, _enum_45, _name_45, _enum_46, _name_46, _enum_47, _name_47, _enum_48, _name_48)\
    private: static std::map<std::wstring, EnumType> InitParse() { std::map<std::wstring, EnumType> parse_map; parse_map[_name_1] = _enum_1; parse_map[_name_2] = _enum_2; parse_map[_name_3] = _enum_3; parse_map[_name_4] = _enum_4; parse_map[_name_5] = _enum_5; parse_map[_name_6] = _enum_6; parse_map[_name_7] = _enum_7; parse_map[_name_8] = _enum_8; parse_map[_name_9] = _enum_9; parse_map[_name_10] = _enum_10; parse_map[_name_11] = _enum_11; parse_map[_name_12] = _enum_12; parse_map[_name_13] = _enum_13; parse_map[_name_14] = _enum_14; parse_map[_name_15] = _enum_15; parse_map[_name_16] = _enum_16; parse_map[_name_17] = _enum_17; parse_map[_name_18] = _enum_18; parse_map[_name_19] = _enum_19; parse_map[_name_20] = _enum_20; parse_map[_name_21] = _enum_21; parse_map[_name_22] = _enum_22; parse_map[_name_23] = _enum_23; parse_map[_name_24] = _enum_24; parse_map[_name_25] = _enum_25; parse_map[_name_26] = _enum_26; parse_map[_name_27] = _enum_27; parse_map[_name_28] = _enum_28; parse_map[_name_29] = _enum_29; parse_map[_name_30] = _enum_30; parse_map[_name_31] = _enum_31; parse_map[_name_32] = _enum_32; parse_map[_name_33] = _enum_33; parse_map[_name_34] = _enum_34; parse_map[_name_35] = _enum_35; parse_map[_name_36] = _enum_36; parse_map[_name_37] = _enum_37; parse_map[_name_38] = _enum_38; parse_map[_name_39] = _enum_39; parse_map[_name_40] = _enum_40; parse_map[_name_41] = _enum_41; parse_map[_name_42] = _enum_42; parse_map[_name_43] = _enum_43; parse_map[_name_44] = _enum_44; parse_map[_name_45] = _enum_45; parse_map[_name_46] = _enum_46; parse_map[_name_47] = _enum_47; parse_map[_name_48] = _enum_48; return parse_map; }
#define DECLARE_ENUM_PARSE_INIT_49(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33, _enum_34, _name_34, _enum_35, _name_35, _enum_36, _name_36, _enum_37, _name_37, _enum_38, _name_38, _enum_39, _name_39, _enum_40, _name_40, _enum_41, _name_41, _enum_42, _name_42, _enum_43, _name_43, _enum_44, _name_44, _enum_45, _name_45, _enum_46, _name_46, _enum_47, _name_47, _enum_48, _name_48, _enum_49, _name_49)\
    private: static std::map<std::wstring, EnumType> InitParse() { std::map<std::wstring, EnumType> parse_map; parse_map[_name_1] = _enum_1; parse_map[_name_2] = _enum_2; parse_map[_name_3] = _enum_3; parse_map[_name_4] = _enum_4; parse_map[_name_5] = _enum_5; parse_map[_name_6] = _enum_6; parse_map[_name_7] = _enum_7; parse_map[_name_8] = _enum_8; parse_map[_name_9] = _enum_9; parse_map[_name_10] = _enum_10; parse_map[_name_11] = _enum_11; parse_map[_name_12] = _enum_12; parse_map[_name_13] = _enum_13; parse_map[_name_14] = _enum_14; parse_map[_name_15] = _enum_15; parse_map[_name_16] = _enum_16; parse_map[_name_17] = _enum_17; parse_map[_name_18] = _enum_18; parse_map[_name_19] = _enum_19; parse_map[_name_20] = _enum_20; parse_map[_name_21] = _enum_21; parse_map[_name_22] = _enum_22; parse_map[_name_23] = _enum_23; parse_map[_name_24] = _enum_24; parse_map[_name_25] = _enum_25; parse_map[_name_26] = _enum_26; parse_map[_name_27] = _enum_27; parse_map[_name_28] = _enum_28; parse_map[_name_29] = _enum_29; parse_map[_name_30] = _enum_30; parse_map[_name_31] = _enum_31; parse_map[_name_32] = _enum_32; parse_map[_name_33] = _enum_33; parse_map[_name_34] = _enum_34; parse_map[_name_35] = _enum_35; parse_map[_name_36] = _enum_36; parse_map[_name_37] = _enum_37; parse_map[_name_38] = _enum_38; parse_map[_name_39] = _enum_39; parse_map[_name_40] = _enum_40; parse_map[_name_41] = _enum_41; parse_map[_name_42] = _enum_42; parse_map[_name_43] = _enum_43; parse_map[_name_44] = _enum_44; parse_map[_name_45] = _enum_45; parse_map[_name_46] = _enum_46; parse_map[_name_47] = _enum_47; parse_map[_name_48] = _enum_48; parse_map[_name_49] = _enum_49; return parse_map; }
#define DECLARE_ENUM_PARSE_INIT_50(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33, _enum_34, _name_34, _enum_35, _name_35, _enum_36, _name_36, _enum_37, _name_37, _enum_38, _name_38, _enum_39, _name_39, _enum_40, _name_40, _enum_41, _name_41, _enum_42, _name_42, _enum_43, _name_43, _enum_44, _name_44, _enum_45, _name_45, _enum_46, _name_46, _enum_47, _name_47, _enum_48, _name_48, _enum_49, _name_49, _enum_50, _name_50)\
    private: static std::map<std::wstring, EnumType> InitParse() { std::map<std::wstring, EnumType> parse_map; parse_map[_name_1] = _enum_1; parse_map[_name_2] = _enum_2; parse_map[_name_3] = _enum_3; parse_map[_name_4] = _enum_4; parse_map[_name_5] = _enum_5; parse_map[_name_6] = _enum_6; parse_map[_name_7] = _enum_7; parse_map[_name_8] = _enum_8; parse_map[_name_9] = _enum_9; parse_map[_name_10] = _enum_10; parse_map[_name_11] = _enum_11; parse_map[_name_12] = _enum_12; parse_map[_name_13] = _enum_13; parse_map[_name_14] = _enum_14; parse_map[_name_15] = _enum_15; parse_map[_name_16] = _enum_16; parse_map[_name_17] = _enum_17; parse_map[_name_18] = _enum_18; parse_map[_name_19] = _enum_19; parse_map[_name_20] = _enum_20; parse_map[_name_21] = _enum_21; parse_map[_name_22] = _enum_22; parse_map[_name_23] = _enum_23; parse_map[_name_24] = _enum_24; parse_map[_name_25] = _enum_25; parse_map[_name_26] = _enum_26; parse_map[_name_27] = _enum_27; parse_map[_name_28] = _enum_28; parse_map[_name_29] = _enum_29; parse_map[_name_30] = _enum_30; parse_map[_name_31] = _enum_31; parse_map[_name_32] = _enum_32; parse_map[_name_33] = _enum_33; parse_map[_name_34] = _enum_34; parse_map[_name_35] = _enum_35; parse_map[_name_36] = _enum_36; parse_map[_name_37] = _enum_37; parse_map[_name_38] = _enum_38; parse_map[_name_39] = _enum_39; parse_map[_name_40] = _enum_40; parse_map[_name_41] = _enum_41; parse_map[_name_42] = _enum_42; parse_map[_name_43] = _enum_43; parse_map[_name_44] = _enum_44; parse_map[_name_45] = _enum_45; parse_map[_name_46] = _enum_46; parse_map[_name_47] = _enum_47; parse_map[_name_48] = _enum_48; parse_map[_name_49] = _enum_49; parse_map[_name_50] = _enum_50; return parse_map; }

#define DECLARE_ENUM_STRING_INIT_1(_enum_1, _name_1)\
    private: static std::map<EnumType, std::wstring> InitString() { std::map<EnumType, std::wstring> string_map; string_map[_enum_1] = _name_1; return string_map; }
#define DECLARE_ENUM_STRING_INIT_2(_enum_1, _name_1, _enum_2, _name_2)\
    private: static std::map<EnumType, std::wstring> InitString() { std::map<EnumType, std::wstring> string_map; string_map[_enum_1] = _name_1; string_map[_enum_2] = _name_2; return string_map; }
#define DECLARE_ENUM_STRING_INIT_3(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3)\
    private: static std::map<EnumType, std::wstring> InitString() { std::map<EnumType, std::wstring> string_map; string_map[_enum_1] = _name_1; string_map[_enum_2] = _name_2; string_map[_enum_3] = _name_3; return string_map; }
#define DECLARE_ENUM_STRING_INIT_4(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4)\
    private: static std::map<EnumType, std::wstring> InitString() { std::map<EnumType, std::wstring> string_map; string_map[_enum_1] = _name_1; string_map[_enum_2] = _name_2; string_map[_enum_3] = _name_3; string_map[_enum_4] = _name_4; return string_map; }
#define DECLARE_ENUM_STRING_INIT_5(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5)\
    private: static std::map<EnumType, std::wstring> InitString() { std::map<EnumType, std::wstring> string_map; string_map[_enum_1] = _name_1; string_map[_enum_2] = _name_2; string_map[_enum_3] = _name_3; string_map[_enum_4] = _name_4; string_map[_enum_5] = _name_5; return string_map; }
#define DECLARE_ENUM_STRING_INIT_6(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6)\
    private: static std::map<EnumType, std::wstring> InitString() { std::map<EnumType, std::wstring> string_map; string_map[_enum_1] = _name_1; string_map[_enum_2] = _name_2; string_map[_enum_3] = _name_3; string_map[_enum_4] = _name_4; string_map[_enum_5] = _name_5; string_map[_enum_6] = _name_6; return string_map; }
#define DECLARE_ENUM_STRING_INIT_7(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7)\
    private: static std::map<EnumType, std::wstring> InitString() { std::map<EnumType, std::wstring> string_map; string_map[_enum_1] = _name_1; string_map[_enum_2] = _name_2; string_map[_enum_3] = _name_3; string_map[_enum_4] = _name_4; string_map[_enum_5] = _name_5; string_map[_enum_6] = _name_6; string_map[_enum_7] = _name_7; return string_map; }
#define DECLARE_ENUM_STRING_INIT_8(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8)\
    private: static std::map<EnumType, std::wstring> InitString() { std::map<EnumType, std::wstring> string_map; string_map[_enum_1] = _name_1; string_map[_enum_2] = _name_2; string_map[_enum_3] = _name_3; string_map[_enum_4] = _name_4; string_map[_enum_5] = _name_5; string_map[_enum_6] = _name_6; string_map[_enum_7] = _name_7; string_map[_enum_8] = _name_8; return string_map; }
#define DECLARE_ENUM_STRING_INIT_9(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9)\
    private: static std::map<EnumType, std::wstring> InitString() { std::map<EnumType, std::wstring> string_map; string_map[_enum_1] = _name_1; string_map[_enum_2] = _name_2; string_map[_enum_3] = _name_3; string_map[_enum_4] = _name_4; string_map[_enum_5] = _name_5; string_map[_enum_6] = _name_6; string_map[_enum_7] = _name_7; string_map[_enum_8] = _name_8; string_map[_enum_9] = _name_9; return string_map; }
#define DECLARE_ENUM_STRING_INIT_10(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10)\
    private: static std::map<EnumType, std::wstring> InitString() { std::map<EnumType, std::wstring> string_map; string_map[_enum_1] = _name_1; string_map[_enum_2] = _name_2; string_map[_enum_3] = _name_3; string_map[_enum_4] = _name_4; string_map[_enum_5] = _name_5; string_map[_enum_6] = _name_6; string_map[_enum_7] = _name_7; string_map[_enum_8] = _name_8; string_map[_enum_9] = _name_9; string_map[_enum_10] = _name_10; return string_map; }
#define DECLARE_ENUM_STRING_INIT_11(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11)\
    private: static std::map<EnumType, std::wstring> InitString() { std::map<EnumType, std::wstring> string_map; string_map[_enum_1] = _name_1; string_map[_enum_2] = _name_2; string_map[_enum_3] = _name_3; string_map[_enum_4] = _name_4; string_map[_enum_5] = _name_5; string_map[_enum_6] = _name_6; string_map[_enum_7] = _name_7; string_map[_enum_8] = _name_8; string_map[_enum_9] = _name_9; string_map[_enum_10] = _name_10; string_map[_enum_11] = _name_11; return string_map; }
#define DECLARE_ENUM_STRING_INIT_12(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12)\
    private: static std::map<EnumType, std::wstring> InitString() { std::map<EnumType, std::wstring> string_map; string_map[_enum_1] = _name_1; string_map[_enum_2] = _name_2; string_map[_enum_3] = _name_3; string_map[_enum_4] = _name_4; string_map[_enum_5] = _name_5; string_map[_enum_6] = _name_6; string_map[_enum_7] = _name_7; string_map[_enum_8] = _name_8; string_map[_enum_9] = _name_9; string_map[_enum_10] = _name_10; string_map[_enum_11] = _name_11; string_map[_enum_12] = _name_12; return string_map; }
#define DECLARE_ENUM_STRING_INIT_13(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13)\
    private: static std::map<EnumType, std::wstring> InitString() { std::map<EnumType, std::wstring> string_map; string_map[_enum_1] = _name_1; string_map[_enum_2] = _name_2; string_map[_enum_3] = _name_3; string_map[_enum_4] = _name_4; string_map[_enum_5] = _name_5; string_map[_enum_6] = _name_6; string_map[_enum_7] = _name_7; string_map[_enum_8] = _name_8; string_map[_enum_9] = _name_9; string_map[_enum_10] = _name_10; string_map[_enum_11] = _name_11; string_map[_enum_12] = _name_12; string_map[_enum_13] = _name_13; return string_map; }
#define DECLARE_ENUM_STRING_INIT_14(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14)\
    private: static std::map<EnumType, std::wstring> InitString() { std::map<EnumType, std::wstring> string_map; string_map[_enum_1] = _name_1; string_map[_enum_2] = _name_2; string_map[_enum_3] = _name_3; string_map[_enum_4] = _name_4; string_map[_enum_5] = _name_5; string_map[_enum_6] = _name_6; string_map[_enum_7] = _name_7; string_map[_enum_8] = _name_8; string_map[_enum_9] = _name_9; string_map[_enum_10] = _name_10; string_map[_enum_11] = _name_11; string_map[_enum_12] = _name_12; string_map[_enum_13] = _name_13; string_map[_enum_14] = _name_14; return string_map; }
#define DECLARE_ENUM_STRING_INIT_15(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15)\
    private: static std::map<EnumType, std::wstring> InitString() { std::map<EnumType, std::wstring> string_map; string_map[_enum_1] = _name_1; string_map[_enum_2] = _name_2; string_map[_enum_3] = _name_3; string_map[_enum_4] = _name_4; string_map[_enum_5] = _name_5; string_map[_enum_6] = _name_6; string_map[_enum_7] = _name_7; string_map[_enum_8] = _name_8; string_map[_enum_9] = _name_9; string_map[_enum_10] = _name_10; string_map[_enum_11] = _name_11; string_map[_enum_12] = _name_12; string_map[_enum_13] = _name_13; string_map[_enum_14] = _name_14; string_map[_enum_15] = _name_15; return string_map; }
#define DECLARE_ENUM_STRING_INIT_16(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16)\
    private: static std::map<EnumType, std::wstring> InitString() { std::map<EnumType, std::wstring> string_map; string_map[_enum_1] = _name_1; string_map[_enum_2] = _name_2; string_map[_enum_3] = _name_3; string_map[_enum_4] = _name_4; string_map[_enum_5] = _name_5; string_map[_enum_6] = _name_6; string_map[_enum_7] = _name_7; string_map[_enum_8] = _name_8; string_map[_enum_9] = _name_9; string_map[_enum_10] = _name_10; string_map[_enum_11] = _name_11; string_map[_enum_12] = _name_12; string_map[_enum_13] = _name_13; string_map[_enum_14] = _name_14; string_map[_enum_15] = _name_15; string_map[_enum_16] = _name_16; return string_map; }
#define DECLARE_ENUM_STRING_INIT_17(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17)\
    private: static std::map<EnumType, std::wstring> InitString() { std::map<EnumType, std::wstring> string_map; string_map[_enum_1] = _name_1; string_map[_enum_2] = _name_2; string_map[_enum_3] = _name_3; string_map[_enum_4] = _name_4; string_map[_enum_5] = _name_5; string_map[_enum_6] = _name_6; string_map[_enum_7] = _name_7; string_map[_enum_8] = _name_8; string_map[_enum_9] = _name_9; string_map[_enum_10] = _name_10; string_map[_enum_11] = _name_11; string_map[_enum_12] = _name_12; string_map[_enum_13] = _name_13; string_map[_enum_14] = _name_14; string_map[_enum_15] = _name_15; string_map[_enum_16] = _name_16; string_map[_enum_17] = _name_17; return string_map; }
#define DECLARE_ENUM_STRING_INIT_18(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18)\
    private: static std::map<EnumType, std::wstring> InitString() { std::map<EnumType, std::wstring> string_map; string_map[_enum_1] = _name_1; string_map[_enum_2] = _name_2; string_map[_enum_3] = _name_3; string_map[_enum_4] = _name_4; string_map[_enum_5] = _name_5; string_map[_enum_6] = _name_6; string_map[_enum_7] = _name_7; string_map[_enum_8] = _name_8; string_map[_enum_9] = _name_9; string_map[_enum_10] = _name_10; string_map[_enum_11] = _name_11; string_map[_enum_12] = _name_12; string_map[_enum_13] = _name_13; string_map[_enum_14] = _name_14; string_map[_enum_15] = _name_15; string_map[_enum_16] = _name_16; string_map[_enum_17] = _name_17; string_map[_enum_18] = _name_18; return string_map; }
#define DECLARE_ENUM_STRING_INIT_19(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19)\
    private: static std::map<EnumType, std::wstring> InitString() { std::map<EnumType, std::wstring> string_map; string_map[_enum_1] = _name_1; string_map[_enum_2] = _name_2; string_map[_enum_3] = _name_3; string_map[_enum_4] = _name_4; string_map[_enum_5] = _name_5; string_map[_enum_6] = _name_6; string_map[_enum_7] = _name_7; string_map[_enum_8] = _name_8; string_map[_enum_9] = _name_9; string_map[_enum_10] = _name_10; string_map[_enum_11] = _name_11; string_map[_enum_12] = _name_12; string_map[_enum_13] = _name_13; string_map[_enum_14] = _name_14; string_map[_enum_15] = _name_15; string_map[_enum_16] = _name_16; string_map[_enum_17] = _name_17; string_map[_enum_18] = _name_18; string_map[_enum_19] = _name_19; return string_map; }
#define DECLARE_ENUM_STRING_INIT_20(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20)\
    private: static std::map<EnumType, std::wstring> InitString() { std::map<EnumType, std::wstring> string_map; string_map[_enum_1] = _name_1; string_map[_enum_2] = _name_2; string_map[_enum_3] = _name_3; string_map[_enum_4] = _name_4; string_map[_enum_5] = _name_5; string_map[_enum_6] = _name_6; string_map[_enum_7] = _name_7; string_map[_enum_8] = _name_8; string_map[_enum_9] = _name_9; string_map[_enum_10] = _name_10; string_map[_enum_11] = _name_11; string_map[_enum_12] = _name_12; string_map[_enum_13] = _name_13; string_map[_enum_14] = _name_14; string_map[_enum_15] = _name_15; string_map[_enum_16] = _name_16; string_map[_enum_17] = _name_17; string_map[_enum_18] = _name_18; string_map[_enum_19] = _name_19; string_map[_enum_20] = _name_20; return string_map; }
#define DECLARE_ENUM_STRING_INIT_21(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21)\
    private: static std::map<EnumType, std::wstring> InitString() { std::map<EnumType, std::wstring> string_map; string_map[_enum_1] = _name_1; string_map[_enum_2] = _name_2; string_map[_enum_3] = _name_3; string_map[_enum_4] = _name_4; string_map[_enum_5] = _name_5; string_map[_enum_6] = _name_6; string_map[_enum_7] = _name_7; string_map[_enum_8] = _name_8; string_map[_enum_9] = _name_9; string_map[_enum_10] = _name_10; string_map[_enum_11] = _name_11; string_map[_enum_12] = _name_12; string_map[_enum_13] = _name_13; string_map[_enum_14] = _name_14; string_map[_enum_15] = _name_15; string_map[_enum_16] = _name_16; string_map[_enum_17] = _name_17; string_map[_enum_18] = _name_18; string_map[_enum_19] = _name_19; string_map[_enum_20] = _name_20; string_map[_enum_21] = _name_21; return string_map; }
#define DECLARE_ENUM_STRING_INIT_22(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22)\
    private: static std::map<EnumType, std::wstring> InitString() { std::map<EnumType, std::wstring> string_map; string_map[_enum_1] = _name_1; string_map[_enum_2] = _name_2; string_map[_enum_3] = _name_3; string_map[_enum_4] = _name_4; string_map[_enum_5] = _name_5; string_map[_enum_6] = _name_6; string_map[_enum_7] = _name_7; string_map[_enum_8] = _name_8; string_map[_enum_9] = _name_9; string_map[_enum_10] = _name_10; string_map[_enum_11] = _name_11; string_map[_enum_12] = _name_12; string_map[_enum_13] = _name_13; string_map[_enum_14] = _name_14; string_map[_enum_15] = _name_15; string_map[_enum_16] = _name_16; string_map[_enum_17] = _name_17; string_map[_enum_18] = _name_18; string_map[_enum_19] = _name_19; string_map[_enum_20] = _name_20; string_map[_enum_21] = _name_21; string_map[_enum_22] = _name_22; return string_map; }
#define DECLARE_ENUM_STRING_INIT_23(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23)\
    private: static std::map<EnumType, std::wstring> InitString() { std::map<EnumType, std::wstring> string_map; string_map[_enum_1] = _name_1; string_map[_enum_2] = _name_2; string_map[_enum_3] = _name_3; string_map[_enum_4] = _name_4; string_map[_enum_5] = _name_5; string_map[_enum_6] = _name_6; string_map[_enum_7] = _name_7; string_map[_enum_8] = _name_8; string_map[_enum_9] = _name_9; string_map[_enum_10] = _name_10; string_map[_enum_11] = _name_11; string_map[_enum_12] = _name_12; string_map[_enum_13] = _name_13; string_map[_enum_14] = _name_14; string_map[_enum_15] = _name_15; string_map[_enum_16] = _name_16; string_map[_enum_17] = _name_17; string_map[_enum_18] = _name_18; string_map[_enum_19] = _name_19; string_map[_enum_20] = _name_20; string_map[_enum_21] = _name_21; string_map[_enum_22] = _name_22; string_map[_enum_23] = _name_23; return string_map; }
#define DECLARE_ENUM_STRING_INIT_24(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24)\
    private: static std::map<EnumType, std::wstring> InitString() { std::map<EnumType, std::wstring> string_map; string_map[_enum_1] = _name_1; string_map[_enum_2] = _name_2; string_map[_enum_3] = _name_3; string_map[_enum_4] = _name_4; string_map[_enum_5] = _name_5; string_map[_enum_6] = _name_6; string_map[_enum_7] = _name_7; string_map[_enum_8] = _name_8; string_map[_enum_9] = _name_9; string_map[_enum_10] = _name_10; string_map[_enum_11] = _name_11; string_map[_enum_12] = _name_12; string_map[_enum_13] = _name_13; string_map[_enum_14] = _name_14; string_map[_enum_15] = _name_15; string_map[_enum_16] = _name_16; string_map[_enum_17] = _name_17; string_map[_enum_18] = _name_18; string_map[_enum_19] = _name_19; string_map[_enum_20] = _name_20; string_map[_enum_21] = _name_21; string_map[_enum_22] = _name_22; string_map[_enum_23] = _name_23; string_map[_enum_24] = _name_24; return string_map; }
#define DECLARE_ENUM_STRING_INIT_25(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25)\
    private: static std::map<EnumType, std::wstring> InitString() { std::map<EnumType, std::wstring> string_map; string_map[_enum_1] = _name_1; string_map[_enum_2] = _name_2; string_map[_enum_3] = _name_3; string_map[_enum_4] = _name_4; string_map[_enum_5] = _name_5; string_map[_enum_6] = _name_6; string_map[_enum_7] = _name_7; string_map[_enum_8] = _name_8; string_map[_enum_9] = _name_9; string_map[_enum_10] = _name_10; string_map[_enum_11] = _name_11; string_map[_enum_12] = _name_12; string_map[_enum_13] = _name_13; string_map[_enum_14] = _name_14; string_map[_enum_15] = _name_15; string_map[_enum_16] = _name_16; string_map[_enum_17] = _name_17; string_map[_enum_18] = _name_18; string_map[_enum_19] = _name_19; string_map[_enum_20] = _name_20; string_map[_enum_21] = _name_21; string_map[_enum_22] = _name_22; string_map[_enum_23] = _name_23; string_map[_enum_24] = _name_24; string_map[_enum_25] = _name_25; return string_map; }
#define DECLARE_ENUM_STRING_INIT_26(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26)\
    private: static std::map<EnumType, std::wstring> InitString() { std::map<EnumType, std::wstring> string_map; string_map[_enum_1] = _name_1; string_map[_enum_2] = _name_2; string_map[_enum_3] = _name_3; string_map[_enum_4] = _name_4; string_map[_enum_5] = _name_5; string_map[_enum_6] = _name_6; string_map[_enum_7] = _name_7; string_map[_enum_8] = _name_8; string_map[_enum_9] = _name_9; string_map[_enum_10] = _name_10; string_map[_enum_11] = _name_11; string_map[_enum_12] = _name_12; string_map[_enum_13] = _name_13; string_map[_enum_14] = _name_14; string_map[_enum_15] = _name_15; string_map[_enum_16] = _name_16; string_map[_enum_17] = _name_17; string_map[_enum_18] = _name_18; string_map[_enum_19] = _name_19; string_map[_enum_20] = _name_20; string_map[_enum_21] = _name_21; string_map[_enum_22] = _name_22; string_map[_enum_23] = _name_23; string_map[_enum_24] = _name_24; string_map[_enum_25] = _name_25; string_map[_enum_26] = _name_26; return string_map; }
#define DECLARE_ENUM_STRING_INIT_27(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27)\
    private: static std::map<EnumType, std::wstring> InitString() { std::map<EnumType, std::wstring> string_map; string_map[_enum_1] = _name_1; string_map[_enum_2] = _name_2; string_map[_enum_3] = _name_3; string_map[_enum_4] = _name_4; string_map[_enum_5] = _name_5; string_map[_enum_6] = _name_6; string_map[_enum_7] = _name_7; string_map[_enum_8] = _name_8; string_map[_enum_9] = _name_9; string_map[_enum_10] = _name_10; string_map[_enum_11] = _name_11; string_map[_enum_12] = _name_12; string_map[_enum_13] = _name_13; string_map[_enum_14] = _name_14; string_map[_enum_15] = _name_15; string_map[_enum_16] = _name_16; string_map[_enum_17] = _name_17; string_map[_enum_18] = _name_18; string_map[_enum_19] = _name_19; string_map[_enum_20] = _name_20; string_map[_enum_21] = _name_21; string_map[_enum_22] = _name_22; string_map[_enum_23] = _name_23; string_map[_enum_24] = _name_24; string_map[_enum_25] = _name_25; string_map[_enum_26] = _name_26; string_map[_enum_27] = _name_27; return string_map; }
#define DECLARE_ENUM_STRING_INIT_28(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28)\
    private: static std::map<EnumType, std::wstring> InitString() { std::map<EnumType, std::wstring> string_map; string_map[_enum_1] = _name_1; string_map[_enum_2] = _name_2; string_map[_enum_3] = _name_3; string_map[_enum_4] = _name_4; string_map[_enum_5] = _name_5; string_map[_enum_6] = _name_6; string_map[_enum_7] = _name_7; string_map[_enum_8] = _name_8; string_map[_enum_9] = _name_9; string_map[_enum_10] = _name_10; string_map[_enum_11] = _name_11; string_map[_enum_12] = _name_12; string_map[_enum_13] = _name_13; string_map[_enum_14] = _name_14; string_map[_enum_15] = _name_15; string_map[_enum_16] = _name_16; string_map[_enum_17] = _name_17; string_map[_enum_18] = _name_18; string_map[_enum_19] = _name_19; string_map[_enum_20] = _name_20; string_map[_enum_21] = _name_21; string_map[_enum_22] = _name_22; string_map[_enum_23] = _name_23; string_map[_enum_24] = _name_24; string_map[_enum_25] = _name_25; string_map[_enum_26] = _name_26; string_map[_enum_27] = _name_27; string_map[_enum_28] = _name_28; return string_map; }
#define DECLARE_ENUM_STRING_INIT_29(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29)\
    private: static std::map<EnumType, std::wstring> InitString() { std::map<EnumType, std::wstring> string_map; string_map[_enum_1] = _name_1; string_map[_enum_2] = _name_2; string_map[_enum_3] = _name_3; string_map[_enum_4] = _name_4; string_map[_enum_5] = _name_5; string_map[_enum_6] = _name_6; string_map[_enum_7] = _name_7; string_map[_enum_8] = _name_8; string_map[_enum_9] = _name_9; string_map[_enum_10] = _name_10; string_map[_enum_11] = _name_11; string_map[_enum_12] = _name_12; string_map[_enum_13] = _name_13; string_map[_enum_14] = _name_14; string_map[_enum_15] = _name_15; string_map[_enum_16] = _name_16; string_map[_enum_17] = _name_17; string_map[_enum_18] = _name_18; string_map[_enum_19] = _name_19; string_map[_enum_20] = _name_20; string_map[_enum_21] = _name_21; string_map[_enum_22] = _name_22; string_map[_enum_23] = _name_23; string_map[_enum_24] = _name_24; string_map[_enum_25] = _name_25; string_map[_enum_26] = _name_26; string_map[_enum_27] = _name_27; string_map[_enum_28] = _name_28; string_map[_enum_29] = _name_29; return string_map; }
#define DECLARE_ENUM_STRING_INIT_30(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30)\
    private: static std::map<EnumType, std::wstring> InitString() { std::map<EnumType, std::wstring> string_map; string_map[_enum_1] = _name_1; string_map[_enum_2] = _name_2; string_map[_enum_3] = _name_3; string_map[_enum_4] = _name_4; string_map[_enum_5] = _name_5; string_map[_enum_6] = _name_6; string_map[_enum_7] = _name_7; string_map[_enum_8] = _name_8; string_map[_enum_9] = _name_9; string_map[_enum_10] = _name_10; string_map[_enum_11] = _name_11; string_map[_enum_12] = _name_12; string_map[_enum_13] = _name_13; string_map[_enum_14] = _name_14; string_map[_enum_15] = _name_15; string_map[_enum_16] = _name_16; string_map[_enum_17] = _name_17; string_map[_enum_18] = _name_18; string_map[_enum_19] = _name_19; string_map[_enum_20] = _name_20; string_map[_enum_21] = _name_21; string_map[_enum_22] = _name_22; string_map[_enum_23] = _name_23; string_map[_enum_24] = _name_24; string_map[_enum_25] = _name_25; string_map[_enum_26] = _name_26; string_map[_enum_27] = _name_27; string_map[_enum_28] = _name_28; string_map[_enum_29] = _name_29; string_map[_enum_30] = _name_30; return string_map; }
#define DECLARE_ENUM_STRING_INIT_31(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31)\
    private: static std::map<EnumType, std::wstring> InitString() { std::map<EnumType, std::wstring> string_map; string_map[_enum_1] = _name_1; string_map[_enum_2] = _name_2; string_map[_enum_3] = _name_3; string_map[_enum_4] = _name_4; string_map[_enum_5] = _name_5; string_map[_enum_6] = _name_6; string_map[_enum_7] = _name_7; string_map[_enum_8] = _name_8; string_map[_enum_9] = _name_9; string_map[_enum_10] = _name_10; string_map[_enum_11] = _name_11; string_map[_enum_12] = _name_12; string_map[_enum_13] = _name_13; string_map[_enum_14] = _name_14; string_map[_enum_15] = _name_15; string_map[_enum_16] = _name_16; string_map[_enum_17] = _name_17; string_map[_enum_18] = _name_18; string_map[_enum_19] = _name_19; string_map[_enum_20] = _name_20; string_map[_enum_21] = _name_21; string_map[_enum_22] = _name_22; string_map[_enum_23] = _name_23; string_map[_enum_24] = _name_24; string_map[_enum_25] = _name_25; string_map[_enum_26] = _name_26; string_map[_enum_27] = _name_27; string_map[_enum_28] = _name_28; string_map[_enum_29] = _name_29; string_map[_enum_30] = _name_30; string_map[_enum_31] = _name_31; return string_map; }
#define DECLARE_ENUM_STRING_INIT_32(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32)\
    private: static std::map<EnumType, std::wstring> InitString() { std::map<EnumType, std::wstring> string_map; string_map[_enum_1] = _name_1; string_map[_enum_2] = _name_2; string_map[_enum_3] = _name_3; string_map[_enum_4] = _name_4; string_map[_enum_5] = _name_5; string_map[_enum_6] = _name_6; string_map[_enum_7] = _name_7; string_map[_enum_8] = _name_8; string_map[_enum_9] = _name_9; string_map[_enum_10] = _name_10; string_map[_enum_11] = _name_11; string_map[_enum_12] = _name_12; string_map[_enum_13] = _name_13; string_map[_enum_14] = _name_14; string_map[_enum_15] = _name_15; string_map[_enum_16] = _name_16; string_map[_enum_17] = _name_17; string_map[_enum_18] = _name_18; string_map[_enum_19] = _name_19; string_map[_enum_20] = _name_20; string_map[_enum_21] = _name_21; string_map[_enum_22] = _name_22; string_map[_enum_23] = _name_23; string_map[_enum_24] = _name_24; string_map[_enum_25] = _name_25; string_map[_enum_26] = _name_26; string_map[_enum_27] = _name_27; string_map[_enum_28] = _name_28; string_map[_enum_29] = _name_29; string_map[_enum_30] = _name_30; string_map[_enum_31] = _name_31; string_map[_enum_32] = _name_32; return string_map; }
#define DECLARE_ENUM_STRING_INIT_33(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33)\
    private: static std::map<EnumType, std::wstring> InitString() { std::map<EnumType, std::wstring> string_map; string_map[_enum_1] = _name_1; string_map[_enum_2] = _name_2; string_map[_enum_3] = _name_3; string_map[_enum_4] = _name_4; string_map[_enum_5] = _name_5; string_map[_enum_6] = _name_6; string_map[_enum_7] = _name_7; string_map[_enum_8] = _name_8; string_map[_enum_9] = _name_9; string_map[_enum_10] = _name_10; string_map[_enum_11] = _name_11; string_map[_enum_12] = _name_12; string_map[_enum_13] = _name_13; string_map[_enum_14] = _name_14; string_map[_enum_15] = _name_15; string_map[_enum_16] = _name_16; string_map[_enum_17] = _name_17; string_map[_enum_18] = _name_18; string_map[_enum_19] = _name_19; string_map[_enum_20] = _name_20; string_map[_enum_21] = _name_21; string_map[_enum_22] = _name_22; string_map[_enum_23] = _name_23; string_map[_enum_24] = _name_24; string_map[_enum_25] = _name_25; string_map[_enum_26] = _name_26; string_map[_enum_27] = _name_27; string_map[_enum_28] = _name_28; string_map[_enum_29] = _name_29; string_map[_enum_30] = _name_30; string_map[_enum_31] = _name_31; string_map[_enum_32] = _name_32; string_map[_enum_33] = _name_33; return string_map; }
#define DECLARE_ENUM_STRING_INIT_34(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33, _enum_34, _name_34)\
    private: static std::map<EnumType, std::wstring> InitString() { std::map<EnumType, std::wstring> string_map; string_map[_enum_1] = _name_1; string_map[_enum_2] = _name_2; string_map[_enum_3] = _name_3; string_map[_enum_4] = _name_4; string_map[_enum_5] = _name_5; string_map[_enum_6] = _name_6; string_map[_enum_7] = _name_7; string_map[_enum_8] = _name_8; string_map[_enum_9] = _name_9; string_map[_enum_10] = _name_10; string_map[_enum_11] = _name_11; string_map[_enum_12] = _name_12; string_map[_enum_13] = _name_13; string_map[_enum_14] = _name_14; string_map[_enum_15] = _name_15; string_map[_enum_16] = _name_16; string_map[_enum_17] = _name_17; string_map[_enum_18] = _name_18; string_map[_enum_19] = _name_19; string_map[_enum_20] = _name_20; string_map[_enum_21] = _name_21; string_map[_enum_22] = _name_22; string_map[_enum_23] = _name_23; string_map[_enum_24] = _name_24; string_map[_enum_25] = _name_25; string_map[_enum_26] = _name_26; string_map[_enum_27] = _name_27; string_map[_enum_28] = _name_28; string_map[_enum_29] = _name_29; string_map[_enum_30] = _name_30; string_map[_enum_31] = _name_31; string_map[_enum_32] = _name_32; string_map[_enum_33] = _name_33; string_map[_enum_34] = _name_34; return string_map; }
#define DECLARE_ENUM_STRING_INIT_35(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33, _enum_34, _name_34, _enum_35, _name_35)\
    private: static std::map<EnumType, std::wstring> InitString() { std::map<EnumType, std::wstring> string_map; string_map[_enum_1] = _name_1; string_map[_enum_2] = _name_2; string_map[_enum_3] = _name_3; string_map[_enum_4] = _name_4; string_map[_enum_5] = _name_5; string_map[_enum_6] = _name_6; string_map[_enum_7] = _name_7; string_map[_enum_8] = _name_8; string_map[_enum_9] = _name_9; string_map[_enum_10] = _name_10; string_map[_enum_11] = _name_11; string_map[_enum_12] = _name_12; string_map[_enum_13] = _name_13; string_map[_enum_14] = _name_14; string_map[_enum_15] = _name_15; string_map[_enum_16] = _name_16; string_map[_enum_17] = _name_17; string_map[_enum_18] = _name_18; string_map[_enum_19] = _name_19; string_map[_enum_20] = _name_20; string_map[_enum_21] = _name_21; string_map[_enum_22] = _name_22; string_map[_enum_23] = _name_23; string_map[_enum_24] = _name_24; string_map[_enum_25] = _name_25; string_map[_enum_26] = _name_26; string_map[_enum_27] = _name_27; string_map[_enum_28] = _name_28; string_map[_enum_29] = _name_29; string_map[_enum_30] = _name_30; string_map[_enum_31] = _name_31; string_map[_enum_32] = _name_32; string_map[_enum_33] = _name_33; string_map[_enum_34] = _name_34; string_map[_enum_35] = _name_35; return string_map; }
#define DECLARE_ENUM_STRING_INIT_36(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33, _enum_34, _name_34, _enum_35, _name_35, _enum_36, _name_36)\
    private: static std::map<EnumType, std::wstring> InitString() { std::map<EnumType, std::wstring> string_map; string_map[_enum_1] = _name_1; string_map[_enum_2] = _name_2; string_map[_enum_3] = _name_3; string_map[_enum_4] = _name_4; string_map[_enum_5] = _name_5; string_map[_enum_6] = _name_6; string_map[_enum_7] = _name_7; string_map[_enum_8] = _name_8; string_map[_enum_9] = _name_9; string_map[_enum_10] = _name_10; string_map[_enum_11] = _name_11; string_map[_enum_12] = _name_12; string_map[_enum_13] = _name_13; string_map[_enum_14] = _name_14; string_map[_enum_15] = _name_15; string_map[_enum_16] = _name_16; string_map[_enum_17] = _name_17; string_map[_enum_18] = _name_18; string_map[_enum_19] = _name_19; string_map[_enum_20] = _name_20; string_map[_enum_21] = _name_21; string_map[_enum_22] = _name_22; string_map[_enum_23] = _name_23; string_map[_enum_24] = _name_24; string_map[_enum_25] = _name_25; string_map[_enum_26] = _name_26; string_map[_enum_27] = _name_27; string_map[_enum_28] = _name_28; string_map[_enum_29] = _name_29; string_map[_enum_30] = _name_30; string_map[_enum_31] = _name_31; string_map[_enum_32] = _name_32; string_map[_enum_33] = _name_33; string_map[_enum_34] = _name_34; string_map[_enum_35] = _name_35; string_map[_enum_36] = _name_36; return string_map; }
#define DECLARE_ENUM_STRING_INIT_37(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33, _enum_34, _name_34, _enum_35, _name_35, _enum_36, _name_36, _enum_37, _name_37)\
    private: static std::map<EnumType, std::wstring> InitString() { std::map<EnumType, std::wstring> string_map; string_map[_enum_1] = _name_1; string_map[_enum_2] = _name_2; string_map[_enum_3] = _name_3; string_map[_enum_4] = _name_4; string_map[_enum_5] = _name_5; string_map[_enum_6] = _name_6; string_map[_enum_7] = _name_7; string_map[_enum_8] = _name_8; string_map[_enum_9] = _name_9; string_map[_enum_10] = _name_10; string_map[_enum_11] = _name_11; string_map[_enum_12] = _name_12; string_map[_enum_13] = _name_13; string_map[_enum_14] = _name_14; string_map[_enum_15] = _name_15; string_map[_enum_16] = _name_16; string_map[_enum_17] = _name_17; string_map[_enum_18] = _name_18; string_map[_enum_19] = _name_19; string_map[_enum_20] = _name_20; string_map[_enum_21] = _name_21; string_map[_enum_22] = _name_22; string_map[_enum_23] = _name_23; string_map[_enum_24] = _name_24; string_map[_enum_25] = _name_25; string_map[_enum_26] = _name_26; string_map[_enum_27] = _name_27; string_map[_enum_28] = _name_28; string_map[_enum_29] = _name_29; string_map[_enum_30] = _name_30; string_map[_enum_31] = _name_31; string_map[_enum_32] = _name_32; string_map[_enum_33] = _name_33; string_map[_enum_34] = _name_34; string_map[_enum_35] = _name_35; string_map[_enum_36] = _name_36; string_map[_enum_37] = _name_37; return string_map; }
#define DECLARE_ENUM_STRING_INIT_38(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33, _enum_34, _name_34, _enum_35, _name_35, _enum_36, _name_36, _enum_37, _name_37, _enum_38, _name_38)\
    private: static std::map<EnumType, std::wstring> InitString() { std::map<EnumType, std::wstring> string_map; string_map[_enum_1] = _name_1; string_map[_enum_2] = _name_2; string_map[_enum_3] = _name_3; string_map[_enum_4] = _name_4; string_map[_enum_5] = _name_5; string_map[_enum_6] = _name_6; string_map[_enum_7] = _name_7; string_map[_enum_8] = _name_8; string_map[_enum_9] = _name_9; string_map[_enum_10] = _name_10; string_map[_enum_11] = _name_11; string_map[_enum_12] = _name_12; string_map[_enum_13] = _name_13; string_map[_enum_14] = _name_14; string_map[_enum_15] = _name_15; string_map[_enum_16] = _name_16; string_map[_enum_17] = _name_17; string_map[_enum_18] = _name_18; string_map[_enum_19] = _name_19; string_map[_enum_20] = _name_20; string_map[_enum_21] = _name_21; string_map[_enum_22] = _name_22; string_map[_enum_23] = _name_23; string_map[_enum_24] = _name_24; string_map[_enum_25] = _name_25; string_map[_enum_26] = _name_26; string_map[_enum_27] = _name_27; string_map[_enum_28] = _name_28; string_map[_enum_29] = _name_29; string_map[_enum_30] = _name_30; string_map[_enum_31] = _name_31; string_map[_enum_32] = _name_32; string_map[_enum_33] = _name_33; string_map[_enum_34] = _name_34; string_map[_enum_35] = _name_35; string_map[_enum_36] = _name_36; string_map[_enum_37] = _name_37; string_map[_enum_38] = _name_38; return string_map; }
#define DECLARE_ENUM_STRING_INIT_39(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33, _enum_34, _name_34, _enum_35, _name_35, _enum_36, _name_36, _enum_37, _name_37, _enum_38, _name_38, _enum_39, _name_39)\
    private: static std::map<EnumType, std::wstring> InitString() { std::map<EnumType, std::wstring> string_map; string_map[_enum_1] = _name_1; string_map[_enum_2] = _name_2; string_map[_enum_3] = _name_3; string_map[_enum_4] = _name_4; string_map[_enum_5] = _name_5; string_map[_enum_6] = _name_6; string_map[_enum_7] = _name_7; string_map[_enum_8] = _name_8; string_map[_enum_9] = _name_9; string_map[_enum_10] = _name_10; string_map[_enum_11] = _name_11; string_map[_enum_12] = _name_12; string_map[_enum_13] = _name_13; string_map[_enum_14] = _name_14; string_map[_enum_15] = _name_15; string_map[_enum_16] = _name_16; string_map[_enum_17] = _name_17; string_map[_enum_18] = _name_18; string_map[_enum_19] = _name_19; string_map[_enum_20] = _name_20; string_map[_enum_21] = _name_21; string_map[_enum_22] = _name_22; string_map[_enum_23] = _name_23; string_map[_enum_24] = _name_24; string_map[_enum_25] = _name_25; string_map[_enum_26] = _name_26; string_map[_enum_27] = _name_27; string_map[_enum_28] = _name_28; string_map[_enum_29] = _name_29; string_map[_enum_30] = _name_30; string_map[_enum_31] = _name_31; string_map[_enum_32] = _name_32; string_map[_enum_33] = _name_33; string_map[_enum_34] = _name_34; string_map[_enum_35] = _name_35; string_map[_enum_36] = _name_36; string_map[_enum_37] = _name_37; string_map[_enum_38] = _name_38; string_map[_enum_39] = _name_39; return string_map; }
#define DECLARE_ENUM_STRING_INIT_40(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33, _enum_34, _name_34, _enum_35, _name_35, _enum_36, _name_36, _enum_37, _name_37, _enum_38, _name_38, _enum_39, _name_39, _enum_40, _name_40)\
    private: static std::map<EnumType, std::wstring> InitString() { std::map<EnumType, std::wstring> string_map; string_map[_enum_1] = _name_1; string_map[_enum_2] = _name_2; string_map[_enum_3] = _name_3; string_map[_enum_4] = _name_4; string_map[_enum_5] = _name_5; string_map[_enum_6] = _name_6; string_map[_enum_7] = _name_7; string_map[_enum_8] = _name_8; string_map[_enum_9] = _name_9; string_map[_enum_10] = _name_10; string_map[_enum_11] = _name_11; string_map[_enum_12] = _name_12; string_map[_enum_13] = _name_13; string_map[_enum_14] = _name_14; string_map[_enum_15] = _name_15; string_map[_enum_16] = _name_16; string_map[_enum_17] = _name_17; string_map[_enum_18] = _name_18; string_map[_enum_19] = _name_19; string_map[_enum_20] = _name_20; string_map[_enum_21] = _name_21; string_map[_enum_22] = _name_22; string_map[_enum_23] = _name_23; string_map[_enum_24] = _name_24; string_map[_enum_25] = _name_25; string_map[_enum_26] = _name_26; string_map[_enum_27] = _name_27; string_map[_enum_28] = _name_28; string_map[_enum_29] = _name_29; string_map[_enum_30] = _name_30; string_map[_enum_31] = _name_31; string_map[_enum_32] = _name_32; string_map[_enum_33] = _name_33; string_map[_enum_34] = _name_34; string_map[_enum_35] = _name_35; string_map[_enum_36] = _name_36; string_map[_enum_37] = _name_37; string_map[_enum_38] = _name_38; string_map[_enum_39] = _name_39; string_map[_enum_40] = _name_40; return string_map; }
#define DECLARE_ENUM_STRING_INIT_41(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33, _enum_34, _name_34, _enum_35, _name_35, _enum_36, _name_36, _enum_37, _name_37, _enum_38, _name_38, _enum_39, _name_39, _enum_40, _name_40, _enum_41, _name_41)\
    private: static std::map<EnumType, std::wstring> InitString() { std::map<EnumType, std::wstring> string_map; string_map[_enum_1] = _name_1; string_map[_enum_2] = _name_2; string_map[_enum_3] = _name_3; string_map[_enum_4] = _name_4; string_map[_enum_5] = _name_5; string_map[_enum_6] = _name_6; string_map[_enum_7] = _name_7; string_map[_enum_8] = _name_8; string_map[_enum_9] = _name_9; string_map[_enum_10] = _name_10; string_map[_enum_11] = _name_11; string_map[_enum_12] = _name_12; string_map[_enum_13] = _name_13; string_map[_enum_14] = _name_14; string_map[_enum_15] = _name_15; string_map[_enum_16] = _name_16; string_map[_enum_17] = _name_17; string_map[_enum_18] = _name_18; string_map[_enum_19] = _name_19; string_map[_enum_20] = _name_20; string_map[_enum_21] = _name_21; string_map[_enum_22] = _name_22; string_map[_enum_23] = _name_23; string_map[_enum_24] = _name_24; string_map[_enum_25] = _name_25; string_map[_enum_26] = _name_26; string_map[_enum_27] = _name_27; string_map[_enum_28] = _name_28; string_map[_enum_29] = _name_29; string_map[_enum_30] = _name_30; string_map[_enum_31] = _name_31; string_map[_enum_32] = _name_32; string_map[_enum_33] = _name_33; string_map[_enum_34] = _name_34; string_map[_enum_35] = _name_35; string_map[_enum_36] = _name_36; string_map[_enum_37] = _name_37; string_map[_enum_38] = _name_38; string_map[_enum_39] = _name_39; string_map[_enum_40] = _name_40; string_map[_enum_41] = _name_41; return string_map; }
#define DECLARE_ENUM_STRING_INIT_42(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33, _enum_34, _name_34, _enum_35, _name_35, _enum_36, _name_36, _enum_37, _name_37, _enum_38, _name_38, _enum_39, _name_39, _enum_40, _name_40, _enum_41, _name_41, _enum_42, _name_42)\
    private: static std::map<EnumType, std::wstring> InitString() { std::map<EnumType, std::wstring> string_map; string_map[_enum_1] = _name_1; string_map[_enum_2] = _name_2; string_map[_enum_3] = _name_3; string_map[_enum_4] = _name_4; string_map[_enum_5] = _name_5; string_map[_enum_6] = _name_6; string_map[_enum_7] = _name_7; string_map[_enum_8] = _name_8; string_map[_enum_9] = _name_9; string_map[_enum_10] = _name_10; string_map[_enum_11] = _name_11; string_map[_enum_12] = _name_12; string_map[_enum_13] = _name_13; string_map[_enum_14] = _name_14; string_map[_enum_15] = _name_15; string_map[_enum_16] = _name_16; string_map[_enum_17] = _name_17; string_map[_enum_18] = _name_18; string_map[_enum_19] = _name_19; string_map[_enum_20] = _name_20; string_map[_enum_21] = _name_21; string_map[_enum_22] = _name_22; string_map[_enum_23] = _name_23; string_map[_enum_24] = _name_24; string_map[_enum_25] = _name_25; string_map[_enum_26] = _name_26; string_map[_enum_27] = _name_27; string_map[_enum_28] = _name_28; string_map[_enum_29] = _name_29; string_map[_enum_30] = _name_30; string_map[_enum_31] = _name_31; string_map[_enum_32] = _name_32; string_map[_enum_33] = _name_33; string_map[_enum_34] = _name_34; string_map[_enum_35] = _name_35; string_map[_enum_36] = _name_36; string_map[_enum_37] = _name_37; string_map[_enum_38] = _name_38; string_map[_enum_39] = _name_39; string_map[_enum_40] = _name_40; string_map[_enum_41] = _name_41; string_map[_enum_42] = _name_42; return string_map; }
#define DECLARE_ENUM_STRING_INIT_43(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33, _enum_34, _name_34, _enum_35, _name_35, _enum_36, _name_36, _enum_37, _name_37, _enum_38, _name_38, _enum_39, _name_39, _enum_40, _name_40, _enum_41, _name_41, _enum_42, _name_42, _enum_43, _name_43)\
    private: static std::map<EnumType, std::wstring> InitString() { std::map<EnumType, std::wstring> string_map; string_map[_enum_1] = _name_1; string_map[_enum_2] = _name_2; string_map[_enum_3] = _name_3; string_map[_enum_4] = _name_4; string_map[_enum_5] = _name_5; string_map[_enum_6] = _name_6; string_map[_enum_7] = _name_7; string_map[_enum_8] = _name_8; string_map[_enum_9] = _name_9; string_map[_enum_10] = _name_10; string_map[_enum_11] = _name_11; string_map[_enum_12] = _name_12; string_map[_enum_13] = _name_13; string_map[_enum_14] = _name_14; string_map[_enum_15] = _name_15; string_map[_enum_16] = _name_16; string_map[_enum_17] = _name_17; string_map[_enum_18] = _name_18; string_map[_enum_19] = _name_19; string_map[_enum_20] = _name_20; string_map[_enum_21] = _name_21; string_map[_enum_22] = _name_22; string_map[_enum_23] = _name_23; string_map[_enum_24] = _name_24; string_map[_enum_25] = _name_25; string_map[_enum_26] = _name_26; string_map[_enum_27] = _name_27; string_map[_enum_28] = _name_28; string_map[_enum_29] = _name_29; string_map[_enum_30] = _name_30; string_map[_enum_31] = _name_31; string_map[_enum_32] = _name_32; string_map[_enum_33] = _name_33; string_map[_enum_34] = _name_34; string_map[_enum_35] = _name_35; string_map[_enum_36] = _name_36; string_map[_enum_37] = _name_37; string_map[_enum_38] = _name_38; string_map[_enum_39] = _name_39; string_map[_enum_40] = _name_40; string_map[_enum_41] = _name_41; string_map[_enum_42] = _name_42; string_map[_enum_43] = _name_43; return string_map; }
#define DECLARE_ENUM_STRING_INIT_44(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33, _enum_34, _name_34, _enum_35, _name_35, _enum_36, _name_36, _enum_37, _name_37, _enum_38, _name_38, _enum_39, _name_39, _enum_40, _name_40, _enum_41, _name_41, _enum_42, _name_42, _enum_43, _name_43, _enum_44, _name_44)\
    private: static std::map<EnumType, std::wstring> InitString() { std::map<EnumType, std::wstring> string_map; string_map[_enum_1] = _name_1; string_map[_enum_2] = _name_2; string_map[_enum_3] = _name_3; string_map[_enum_4] = _name_4; string_map[_enum_5] = _name_5; string_map[_enum_6] = _name_6; string_map[_enum_7] = _name_7; string_map[_enum_8] = _name_8; string_map[_enum_9] = _name_9; string_map[_enum_10] = _name_10; string_map[_enum_11] = _name_11; string_map[_enum_12] = _name_12; string_map[_enum_13] = _name_13; string_map[_enum_14] = _name_14; string_map[_enum_15] = _name_15; string_map[_enum_16] = _name_16; string_map[_enum_17] = _name_17; string_map[_enum_18] = _name_18; string_map[_enum_19] = _name_19; string_map[_enum_20] = _name_20; string_map[_enum_21] = _name_21; string_map[_enum_22] = _name_22; string_map[_enum_23] = _name_23; string_map[_enum_24] = _name_24; string_map[_enum_25] = _name_25; string_map[_enum_26] = _name_26; string_map[_enum_27] = _name_27; string_map[_enum_28] = _name_28; string_map[_enum_29] = _name_29; string_map[_enum_30] = _name_30; string_map[_enum_31] = _name_31; string_map[_enum_32] = _name_32; string_map[_enum_33] = _name_33; string_map[_enum_34] = _name_34; string_map[_enum_35] = _name_35; string_map[_enum_36] = _name_36; string_map[_enum_37] = _name_37; string_map[_enum_38] = _name_38; string_map[_enum_39] = _name_39; string_map[_enum_40] = _name_40; string_map[_enum_41] = _name_41; string_map[_enum_42] = _name_42; string_map[_enum_43] = _name_43; string_map[_enum_44] = _name_44; return string_map; }
#define DECLARE_ENUM_STRING_INIT_45(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33, _enum_34, _name_34, _enum_35, _name_35, _enum_36, _name_36, _enum_37, _name_37, _enum_38, _name_38, _enum_39, _name_39, _enum_40, _name_40, _enum_41, _name_41, _enum_42, _name_42, _enum_43, _name_43, _enum_44, _name_44, _enum_45, _name_45)\
    private: static std::map<EnumType, std::wstring> InitString() { std::map<EnumType, std::wstring> string_map; string_map[_enum_1] = _name_1; string_map[_enum_2] = _name_2; string_map[_enum_3] = _name_3; string_map[_enum_4] = _name_4; string_map[_enum_5] = _name_5; string_map[_enum_6] = _name_6; string_map[_enum_7] = _name_7; string_map[_enum_8] = _name_8; string_map[_enum_9] = _name_9; string_map[_enum_10] = _name_10; string_map[_enum_11] = _name_11; string_map[_enum_12] = _name_12; string_map[_enum_13] = _name_13; string_map[_enum_14] = _name_14; string_map[_enum_15] = _name_15; string_map[_enum_16] = _name_16; string_map[_enum_17] = _name_17; string_map[_enum_18] = _name_18; string_map[_enum_19] = _name_19; string_map[_enum_20] = _name_20; string_map[_enum_21] = _name_21; string_map[_enum_22] = _name_22; string_map[_enum_23] = _name_23; string_map[_enum_24] = _name_24; string_map[_enum_25] = _name_25; string_map[_enum_26] = _name_26; string_map[_enum_27] = _name_27; string_map[_enum_28] = _name_28; string_map[_enum_29] = _name_29; string_map[_enum_30] = _name_30; string_map[_enum_31] = _name_31; string_map[_enum_32] = _name_32; string_map[_enum_33] = _name_33; string_map[_enum_34] = _name_34; string_map[_enum_35] = _name_35; string_map[_enum_36] = _name_36; string_map[_enum_37] = _name_37; string_map[_enum_38] = _name_38; string_map[_enum_39] = _name_39; string_map[_enum_40] = _name_40; string_map[_enum_41] = _name_41; string_map[_enum_42] = _name_42; string_map[_enum_43] = _name_43; string_map[_enum_44] = _name_44; string_map[_enum_45] = _name_45; return string_map; }
#define DECLARE_ENUM_STRING_INIT_46(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33, _enum_34, _name_34, _enum_35, _name_35, _enum_36, _name_36, _enum_37, _name_37, _enum_38, _name_38, _enum_39, _name_39, _enum_40, _name_40, _enum_41, _name_41, _enum_42, _name_42, _enum_43, _name_43, _enum_44, _name_44, _enum_45, _name_45, _enum_46, _name_46)\
    private: static std::map<EnumType, std::wstring> InitString() { std::map<EnumType, std::wstring> string_map; string_map[_enum_1] = _name_1; string_map[_enum_2] = _name_2; string_map[_enum_3] = _name_3; string_map[_enum_4] = _name_4; string_map[_enum_5] = _name_5; string_map[_enum_6] = _name_6; string_map[_enum_7] = _name_7; string_map[_enum_8] = _name_8; string_map[_enum_9] = _name_9; string_map[_enum_10] = _name_10; string_map[_enum_11] = _name_11; string_map[_enum_12] = _name_12; string_map[_enum_13] = _name_13; string_map[_enum_14] = _name_14; string_map[_enum_15] = _name_15; string_map[_enum_16] = _name_16; string_map[_enum_17] = _name_17; string_map[_enum_18] = _name_18; string_map[_enum_19] = _name_19; string_map[_enum_20] = _name_20; string_map[_enum_21] = _name_21; string_map[_enum_22] = _name_22; string_map[_enum_23] = _name_23; string_map[_enum_24] = _name_24; string_map[_enum_25] = _name_25; string_map[_enum_26] = _name_26; string_map[_enum_27] = _name_27; string_map[_enum_28] = _name_28; string_map[_enum_29] = _name_29; string_map[_enum_30] = _name_30; string_map[_enum_31] = _name_31; string_map[_enum_32] = _name_32; string_map[_enum_33] = _name_33; string_map[_enum_34] = _name_34; string_map[_enum_35] = _name_35; string_map[_enum_36] = _name_36; string_map[_enum_37] = _name_37; string_map[_enum_38] = _name_38; string_map[_enum_39] = _name_39; string_map[_enum_40] = _name_40; string_map[_enum_41] = _name_41; string_map[_enum_42] = _name_42; string_map[_enum_43] = _name_43; string_map[_enum_44] = _name_44; string_map[_enum_45] = _name_45; string_map[_enum_46] = _name_46; return string_map; }
#define DECLARE_ENUM_STRING_INIT_47(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33, _enum_34, _name_34, _enum_35, _name_35, _enum_36, _name_36, _enum_37, _name_37, _enum_38, _name_38, _enum_39, _name_39, _enum_40, _name_40, _enum_41, _name_41, _enum_42, _name_42, _enum_43, _name_43, _enum_44, _name_44, _enum_45, _name_45, _enum_46, _name_46, _enum_47, _name_47)\
    private: static std::map<EnumType, std::wstring> InitString() { std::map<EnumType, std::wstring> string_map; string_map[_enum_1] = _name_1; string_map[_enum_2] = _name_2; string_map[_enum_3] = _name_3; string_map[_enum_4] = _name_4; string_map[_enum_5] = _name_5; string_map[_enum_6] = _name_6; string_map[_enum_7] = _name_7; string_map[_enum_8] = _name_8; string_map[_enum_9] = _name_9; string_map[_enum_10] = _name_10; string_map[_enum_11] = _name_11; string_map[_enum_12] = _name_12; string_map[_enum_13] = _name_13; string_map[_enum_14] = _name_14; string_map[_enum_15] = _name_15; string_map[_enum_16] = _name_16; string_map[_enum_17] = _name_17; string_map[_enum_18] = _name_18; string_map[_enum_19] = _name_19; string_map[_enum_20] = _name_20; string_map[_enum_21] = _name_21; string_map[_enum_22] = _name_22; string_map[_enum_23] = _name_23; string_map[_enum_24] = _name_24; string_map[_enum_25] = _name_25; string_map[_enum_26] = _name_26; string_map[_enum_27] = _name_27; string_map[_enum_28] = _name_28; string_map[_enum_29] = _name_29; string_map[_enum_30] = _name_30; string_map[_enum_31] = _name_31; string_map[_enum_32] = _name_32; string_map[_enum_33] = _name_33; string_map[_enum_34] = _name_34; string_map[_enum_35] = _name_35; string_map[_enum_36] = _name_36; string_map[_enum_37] = _name_37; string_map[_enum_38] = _name_38; string_map[_enum_39] = _name_39; string_map[_enum_40] = _name_40; string_map[_enum_41] = _name_41; string_map[_enum_42] = _name_42; string_map[_enum_43] = _name_43; string_map[_enum_44] = _name_44; string_map[_enum_45] = _name_45; string_map[_enum_46] = _name_46; string_map[_enum_47] = _name_47; return string_map; }
#define DECLARE_ENUM_STRING_INIT_48(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33, _enum_34, _name_34, _enum_35, _name_35, _enum_36, _name_36, _enum_37, _name_37, _enum_38, _name_38, _enum_39, _name_39, _enum_40, _name_40, _enum_41, _name_41, _enum_42, _name_42, _enum_43, _name_43, _enum_44, _name_44, _enum_45, _name_45, _enum_46, _name_46, _enum_47, _name_47, _enum_48, _name_48)\
    private: static std::map<EnumType, std::wstring> InitString() { std::map<EnumType, std::wstring> string_map; string_map[_enum_1] = _name_1; string_map[_enum_2] = _name_2; string_map[_enum_3] = _name_3; string_map[_enum_4] = _name_4; string_map[_enum_5] = _name_5; string_map[_enum_6] = _name_6; string_map[_enum_7] = _name_7; string_map[_enum_8] = _name_8; string_map[_enum_9] = _name_9; string_map[_enum_10] = _name_10; string_map[_enum_11] = _name_11; string_map[_enum_12] = _name_12; string_map[_enum_13] = _name_13; string_map[_enum_14] = _name_14; string_map[_enum_15] = _name_15; string_map[_enum_16] = _name_16; string_map[_enum_17] = _name_17; string_map[_enum_18] = _name_18; string_map[_enum_19] = _name_19; string_map[_enum_20] = _name_20; string_map[_enum_21] = _name_21; string_map[_enum_22] = _name_22; string_map[_enum_23] = _name_23; string_map[_enum_24] = _name_24; string_map[_enum_25] = _name_25; string_map[_enum_26] = _name_26; string_map[_enum_27] = _name_27; string_map[_enum_28] = _name_28; string_map[_enum_29] = _name_29; string_map[_enum_30] = _name_30; string_map[_enum_31] = _name_31; string_map[_enum_32] = _name_32; string_map[_enum_33] = _name_33; string_map[_enum_34] = _name_34; string_map[_enum_35] = _name_35; string_map[_enum_36] = _name_36; string_map[_enum_37] = _name_37; string_map[_enum_38] = _name_38; string_map[_enum_39] = _name_39; string_map[_enum_40] = _name_40; string_map[_enum_41] = _name_41; string_map[_enum_42] = _name_42; string_map[_enum_43] = _name_43; string_map[_enum_44] = _name_44; string_map[_enum_45] = _name_45; string_map[_enum_46] = _name_46; string_map[_enum_47] = _name_47; string_map[_enum_48] = _name_48; return string_map; }
#define DECLARE_ENUM_STRING_INIT_49(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33, _enum_34, _name_34, _enum_35, _name_35, _enum_36, _name_36, _enum_37, _name_37, _enum_38, _name_38, _enum_39, _name_39, _enum_40, _name_40, _enum_41, _name_41, _enum_42, _name_42, _enum_43, _name_43, _enum_44, _name_44, _enum_45, _name_45, _enum_46, _name_46, _enum_47, _name_47, _enum_48, _name_48, _enum_49, _name_49)\
    private: static std::map<EnumType, std::wstring> InitString() { std::map<EnumType, std::wstring> string_map; string_map[_enum_1] = _name_1; string_map[_enum_2] = _name_2; string_map[_enum_3] = _name_3; string_map[_enum_4] = _name_4; string_map[_enum_5] = _name_5; string_map[_enum_6] = _name_6; string_map[_enum_7] = _name_7; string_map[_enum_8] = _name_8; string_map[_enum_9] = _name_9; string_map[_enum_10] = _name_10; string_map[_enum_11] = _name_11; string_map[_enum_12] = _name_12; string_map[_enum_13] = _name_13; string_map[_enum_14] = _name_14; string_map[_enum_15] = _name_15; string_map[_enum_16] = _name_16; string_map[_enum_17] = _name_17; string_map[_enum_18] = _name_18; string_map[_enum_19] = _name_19; string_map[_enum_20] = _name_20; string_map[_enum_21] = _name_21; string_map[_enum_22] = _name_22; string_map[_enum_23] = _name_23; string_map[_enum_24] = _name_24; string_map[_enum_25] = _name_25; string_map[_enum_26] = _name_26; string_map[_enum_27] = _name_27; string_map[_enum_28] = _name_28; string_map[_enum_29] = _name_29; string_map[_enum_30] = _name_30; string_map[_enum_31] = _name_31; string_map[_enum_32] = _name_32; string_map[_enum_33] = _name_33; string_map[_enum_34] = _name_34; string_map[_enum_35] = _name_35; string_map[_enum_36] = _name_36; string_map[_enum_37] = _name_37; string_map[_enum_38] = _name_38; string_map[_enum_39] = _name_39; string_map[_enum_40] = _name_40; string_map[_enum_41] = _name_41; string_map[_enum_42] = _name_42; string_map[_enum_43] = _name_43; string_map[_enum_44] = _name_44; string_map[_enum_45] = _name_45; string_map[_enum_46] = _name_46; string_map[_enum_47] = _name_47; string_map[_enum_48] = _name_48; string_map[_enum_49] = _name_49; return string_map; }
#define DECLARE_ENUM_STRING_INIT_50(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33, _enum_34, _name_34, _enum_35, _name_35, _enum_36, _name_36, _enum_37, _name_37, _enum_38, _name_38, _enum_39, _name_39, _enum_40, _name_40, _enum_41, _name_41, _enum_42, _name_42, _enum_43, _name_43, _enum_44, _name_44, _enum_45, _name_45, _enum_46, _name_46, _enum_47, _name_47, _enum_48, _name_48, _enum_49, _name_49, _enum_50, _name_50)\
    private: static std::map<EnumType, std::wstring> InitString() { std::map<EnumType, std::wstring> string_map; string_map[_enum_1] = _name_1; string_map[_enum_2] = _name_2; string_map[_enum_3] = _name_3; string_map[_enum_4] = _name_4; string_map[_enum_5] = _name_5; string_map[_enum_6] = _name_6; string_map[_enum_7] = _name_7; string_map[_enum_8] = _name_8; string_map[_enum_9] = _name_9; string_map[_enum_10] = _name_10; string_map[_enum_11] = _name_11; string_map[_enum_12] = _name_12; string_map[_enum_13] = _name_13; string_map[_enum_14] = _name_14; string_map[_enum_15] = _name_15; string_map[_enum_16] = _name_16; string_map[_enum_17] = _name_17; string_map[_enum_18] = _name_18; string_map[_enum_19] = _name_19; string_map[_enum_20] = _name_20; string_map[_enum_21] = _name_21; string_map[_enum_22] = _name_22; string_map[_enum_23] = _name_23; string_map[_enum_24] = _name_24; string_map[_enum_25] = _name_25; string_map[_enum_26] = _name_26; string_map[_enum_27] = _name_27; string_map[_enum_28] = _name_28; string_map[_enum_29] = _name_29; string_map[_enum_30] = _name_30; string_map[_enum_31] = _name_31; string_map[_enum_32] = _name_32; string_map[_enum_33] = _name_33; string_map[_enum_34] = _name_34; string_map[_enum_35] = _name_35; string_map[_enum_36] = _name_36; string_map[_enum_37] = _name_37; string_map[_enum_38] = _name_38; string_map[_enum_39] = _name_39; string_map[_enum_40] = _name_40; string_map[_enum_41] = _name_41; string_map[_enum_42] = _name_42; string_map[_enum_43] = _name_43; string_map[_enum_44] = _name_44; string_map[_enum_45] = _name_45; string_map[_enum_46] = _name_46; string_map[_enum_47] = _name_47; string_map[_enum_48] = _name_48; string_map[_enum_49] = _name_49; string_map[_enum_50] = _name_50; return string_map; }

#define DECLARE_ENUM_PARSE(enum_name)\
    public: static EnumType Parse(std::wstring const &value) {\
        static std::map<std::wstring, EnumType> const ParseMap(InitParse());\
        std::map<std::wstring, EnumType>::const_iterator found_value = ParseMap.find(value);\
        if (found_value == ParseMap.end())\
            throw std::runtime_error(FormatHelper::Read( #enum_name ": Failed to parse '%S' to enum.", value.c_str()));\
        return found_value->second; }

#define DECLARE_ENUM_STRING(enum_name)\
    public: static std::wstring ToString(EnumType const value) {\
        static std::map<EnumType, std::wstring> const StringMap(InitString());\
        std::map<EnumType, std::wstring>::const_iterator found_value = StringMap.find(value);\
        if (found_value == StringMap.end())\
            throw std::runtime_error(FormatHelper::Read( #enum_name ": Failed to convert %d to string.", value));\
        return found_value->second; }

#define DECLARE_ENUM_1(_enum_name, _enum_1, _name_1) struct _enum_name {\
    DECLARE_ENUM_TYPE_1(_enum_1);\
    DECLARE_ENUM_PARSE_INIT_1(_enum_1, _name_1);\
    DECLARE_ENUM_STRING_INIT_1(_enum_1, _name_1);\
    DECLARE_ENUM_PARSE(_enum_name); DECLARE_ENUM_STRING(_enum_name); };
#define DECLARE_ENUM_2(_enum_name, _enum_1, _name_1, _enum_2, _name_2) struct _enum_name {\
    DECLARE_ENUM_TYPE_2(_enum_1, _enum_2);\
    DECLARE_ENUM_PARSE_INIT_2(_enum_1, _name_1, _enum_2, _name_2);\
    DECLARE_ENUM_STRING_INIT_2(_enum_1, _name_1, _enum_2, _name_2);\
    DECLARE_ENUM_PARSE(_enum_name); DECLARE_ENUM_STRING(_enum_name); };
#define DECLARE_ENUM_3(_enum_name, _enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3) struct _enum_name {\
    DECLARE_ENUM_TYPE_3(_enum_1, _enum_2, _enum_3);\
    DECLARE_ENUM_PARSE_INIT_3(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3);\
    DECLARE_ENUM_STRING_INIT_3(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3);\
    DECLARE_ENUM_PARSE(_enum_name); DECLARE_ENUM_STRING(_enum_name); };
#define DECLARE_ENUM_4(_enum_name, _enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4) struct _enum_name {\
    DECLARE_ENUM_TYPE_4(_enum_1, _enum_2, _enum_3, _enum_4);\
    DECLARE_ENUM_PARSE_INIT_4(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4);\
    DECLARE_ENUM_STRING_INIT_4(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4);\
    DECLARE_ENUM_PARSE(_enum_name); DECLARE_ENUM_STRING(_enum_name); };
#define DECLARE_ENUM_5(_enum_name, _enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5) struct _enum_name {\
    DECLARE_ENUM_TYPE_5(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5);\
    DECLARE_ENUM_PARSE_INIT_5(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5);\
    DECLARE_ENUM_STRING_INIT_5(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5);\
    DECLARE_ENUM_PARSE(_enum_name); DECLARE_ENUM_STRING(_enum_name); };
#define DECLARE_ENUM_6(_enum_name, _enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6) struct _enum_name {\
    DECLARE_ENUM_TYPE_6(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6);\
    DECLARE_ENUM_PARSE_INIT_6(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6);\
    DECLARE_ENUM_STRING_INIT_6(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6);\
    DECLARE_ENUM_PARSE(_enum_name); DECLARE_ENUM_STRING(_enum_name); };
#define DECLARE_ENUM_7(_enum_name, _enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7) struct _enum_name {\
    DECLARE_ENUM_TYPE_7(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7);\
    DECLARE_ENUM_PARSE_INIT_7(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7);\
    DECLARE_ENUM_STRING_INIT_7(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7);\
    DECLARE_ENUM_PARSE(_enum_name); DECLARE_ENUM_STRING(_enum_name); };
#define DECLARE_ENUM_8(_enum_name, _enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8) struct _enum_name {\
    DECLARE_ENUM_TYPE_8(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8);\
    DECLARE_ENUM_PARSE_INIT_8(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8);\
    DECLARE_ENUM_STRING_INIT_8(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8);\
    DECLARE_ENUM_PARSE(_enum_name); DECLARE_ENUM_STRING(_enum_name); };
#define DECLARE_ENUM_9(_enum_name, _enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9) struct _enum_name {\
    DECLARE_ENUM_TYPE_9(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9);\
    DECLARE_ENUM_PARSE_INIT_9(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9);\
    DECLARE_ENUM_STRING_INIT_9(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9);\
    DECLARE_ENUM_PARSE(_enum_name); DECLARE_ENUM_STRING(_enum_name); };
#define DECLARE_ENUM_10(_enum_name, _enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10) struct _enum_name {\
    DECLARE_ENUM_TYPE_10(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10);\
    DECLARE_ENUM_PARSE_INIT_10(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10);\
    DECLARE_ENUM_STRING_INIT_10(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10);\
    DECLARE_ENUM_PARSE(_enum_name); DECLARE_ENUM_STRING(_enum_name); };
#define DECLARE_ENUM_11(_enum_name, _enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11) struct _enum_name {\
    DECLARE_ENUM_TYPE_11(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11);\
    DECLARE_ENUM_PARSE_INIT_11(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11);\
    DECLARE_ENUM_STRING_INIT_11(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11);\
    DECLARE_ENUM_PARSE(_enum_name); DECLARE_ENUM_STRING(_enum_name); };
#define DECLARE_ENUM_12(_enum_name, _enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12) struct _enum_name {\
    DECLARE_ENUM_TYPE_12(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12);\
    DECLARE_ENUM_PARSE_INIT_12(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12);\
    DECLARE_ENUM_STRING_INIT_12(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12);\
    DECLARE_ENUM_PARSE(_enum_name); DECLARE_ENUM_STRING(_enum_name); };
#define DECLARE_ENUM_13(_enum_name, _enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13) struct _enum_name {\
    DECLARE_ENUM_TYPE_13(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13);\
    DECLARE_ENUM_PARSE_INIT_13(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13);\
    DECLARE_ENUM_STRING_INIT_13(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13);\
    DECLARE_ENUM_PARSE(_enum_name); DECLARE_ENUM_STRING(_enum_name); };
#define DECLARE_ENUM_14(_enum_name, _enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14) struct _enum_name {\
    DECLARE_ENUM_TYPE_14(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14);\
    DECLARE_ENUM_PARSE_INIT_14(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14);\
    DECLARE_ENUM_STRING_INIT_14(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14);\
    DECLARE_ENUM_PARSE(_enum_name); DECLARE_ENUM_STRING(_enum_name); };
#define DECLARE_ENUM_15(_enum_name, _enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15) struct _enum_name {\
    DECLARE_ENUM_TYPE_15(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15);\
    DECLARE_ENUM_PARSE_INIT_15(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15);\
    DECLARE_ENUM_STRING_INIT_15(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15);\
    DECLARE_ENUM_PARSE(_enum_name); DECLARE_ENUM_STRING(_enum_name); };
#define DECLARE_ENUM_16(_enum_name, _enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16) struct _enum_name {\
    DECLARE_ENUM_TYPE_16(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16);\
    DECLARE_ENUM_PARSE_INIT_16(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16);\
    DECLARE_ENUM_STRING_INIT_16(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16);\
    DECLARE_ENUM_PARSE(_enum_name); DECLARE_ENUM_STRING(_enum_name); };
#define DECLARE_ENUM_17(_enum_name, _enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17) struct _enum_name {\
    DECLARE_ENUM_TYPE_17(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17);\
    DECLARE_ENUM_PARSE_INIT_17(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17);\
    DECLARE_ENUM_STRING_INIT_17(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17);\
    DECLARE_ENUM_PARSE(_enum_name); DECLARE_ENUM_STRING(_enum_name); };
#define DECLARE_ENUM_18(_enum_name, _enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18) struct _enum_name {\
    DECLARE_ENUM_TYPE_18(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18);\
    DECLARE_ENUM_PARSE_INIT_18(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18);\
    DECLARE_ENUM_STRING_INIT_18(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18);\
    DECLARE_ENUM_PARSE(_enum_name); DECLARE_ENUM_STRING(_enum_name); };
#define DECLARE_ENUM_19(_enum_name, _enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19) struct _enum_name {\
    DECLARE_ENUM_TYPE_19(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19);\
    DECLARE_ENUM_PARSE_INIT_19(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19);\
    DECLARE_ENUM_STRING_INIT_19(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19);\
    DECLARE_ENUM_PARSE(_enum_name); DECLARE_ENUM_STRING(_enum_name); };
#define DECLARE_ENUM_20(_enum_name, _enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20) struct _enum_name {\
    DECLARE_ENUM_TYPE_20(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20);\
    DECLARE_ENUM_PARSE_INIT_20(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20);\
    DECLARE_ENUM_STRING_INIT_20(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20);\
    DECLARE_ENUM_PARSE(_enum_name); DECLARE_ENUM_STRING(_enum_name); };
#define DECLARE_ENUM_21(_enum_name, _enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21) struct _enum_name {\
    DECLARE_ENUM_TYPE_21(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21);\
    DECLARE_ENUM_PARSE_INIT_21(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21);\
    DECLARE_ENUM_STRING_INIT_21(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21);\
    DECLARE_ENUM_PARSE(_enum_name); DECLARE_ENUM_STRING(_enum_name); };
#define DECLARE_ENUM_22(_enum_name, _enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22) struct _enum_name {\
    DECLARE_ENUM_TYPE_22(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21, _enum_22);\
    DECLARE_ENUM_PARSE_INIT_22(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22);\
    DECLARE_ENUM_STRING_INIT_22(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22);\
    DECLARE_ENUM_PARSE(_enum_name); DECLARE_ENUM_STRING(_enum_name); };
#define DECLARE_ENUM_23(_enum_name, _enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23) struct _enum_name {\
    DECLARE_ENUM_TYPE_23(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21, _enum_22, _enum_23);\
    DECLARE_ENUM_PARSE_INIT_23(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23);\
    DECLARE_ENUM_STRING_INIT_23(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23);\
    DECLARE_ENUM_PARSE(_enum_name); DECLARE_ENUM_STRING(_enum_name); };
#define DECLARE_ENUM_24(_enum_name, _enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24) struct _enum_name {\
    DECLARE_ENUM_TYPE_24(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21, _enum_22, _enum_23, _enum_24);\
    DECLARE_ENUM_PARSE_INIT_24(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24);\
    DECLARE_ENUM_STRING_INIT_24(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24);\
    DECLARE_ENUM_PARSE(_enum_name); DECLARE_ENUM_STRING(_enum_name); };
#define DECLARE_ENUM_25(_enum_name, _enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25) struct _enum_name {\
    DECLARE_ENUM_TYPE_25(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21, _enum_22, _enum_23, _enum_24, _enum_25);\
    DECLARE_ENUM_PARSE_INIT_25(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25);\
    DECLARE_ENUM_STRING_INIT_25(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25);\
    DECLARE_ENUM_PARSE(_enum_name); DECLARE_ENUM_STRING(_enum_name); };
#define DECLARE_ENUM_26(_enum_name, _enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26) struct _enum_name {\
    DECLARE_ENUM_TYPE_26(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21, _enum_22, _enum_23, _enum_24, _enum_25, _enum_26);\
    DECLARE_ENUM_PARSE_INIT_26(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26);\
    DECLARE_ENUM_STRING_INIT_26(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26);\
    DECLARE_ENUM_PARSE(_enum_name); DECLARE_ENUM_STRING(_enum_name); };
#define DECLARE_ENUM_27(_enum_name, _enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27) struct _enum_name {\
    DECLARE_ENUM_TYPE_27(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21, _enum_22, _enum_23, _enum_24, _enum_25, _enum_26, _enum_27);\
    DECLARE_ENUM_PARSE_INIT_27(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27);\
    DECLARE_ENUM_STRING_INIT_27(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27);\
    DECLARE_ENUM_PARSE(_enum_name); DECLARE_ENUM_STRING(_enum_name); };
#define DECLARE_ENUM_28(_enum_name, _enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28) struct _enum_name {\
    DECLARE_ENUM_TYPE_28(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21, _enum_22, _enum_23, _enum_24, _enum_25, _enum_26, _enum_27, _enum_28);\
    DECLARE_ENUM_PARSE_INIT_28(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28);\
    DECLARE_ENUM_STRING_INIT_28(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28);\
    DECLARE_ENUM_PARSE(_enum_name); DECLARE_ENUM_STRING(_enum_name); };
#define DECLARE_ENUM_29(_enum_name, _enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29) struct _enum_name {\
    DECLARE_ENUM_TYPE_29(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21, _enum_22, _enum_23, _enum_24, _enum_25, _enum_26, _enum_27, _enum_28, _enum_29);\
    DECLARE_ENUM_PARSE_INIT_29(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29);\
    DECLARE_ENUM_STRING_INIT_29(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29);\
    DECLARE_ENUM_PARSE(_enum_name); DECLARE_ENUM_STRING(_enum_name); };
#define DECLARE_ENUM_30(_enum_name, _enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30) struct _enum_name {\
    DECLARE_ENUM_TYPE_30(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21, _enum_22, _enum_23, _enum_24, _enum_25, _enum_26, _enum_27, _enum_28, _enum_29, _enum_30);\
    DECLARE_ENUM_PARSE_INIT_30(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30);\
    DECLARE_ENUM_STRING_INIT_30(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30);\
    DECLARE_ENUM_PARSE(_enum_name); DECLARE_ENUM_STRING(_enum_name); };
#define DECLARE_ENUM_31(_enum_name, _enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31) struct _enum_name {\
    DECLARE_ENUM_TYPE_31(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21, _enum_22, _enum_23, _enum_24, _enum_25, _enum_26, _enum_27, _enum_28, _enum_29, _enum_30, _enum_31);\
    DECLARE_ENUM_PARSE_INIT_31(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31);\
    DECLARE_ENUM_STRING_INIT_31(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31);\
    DECLARE_ENUM_PARSE(_enum_name); DECLARE_ENUM_STRING(_enum_name); };
#define DECLARE_ENUM_32(_enum_name, _enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32) struct _enum_name {\
    DECLARE_ENUM_TYPE_32(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21, _enum_22, _enum_23, _enum_24, _enum_25, _enum_26, _enum_27, _enum_28, _enum_29, _enum_30, _enum_31, _enum_32);\
    DECLARE_ENUM_PARSE_INIT_32(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32);\
    DECLARE_ENUM_STRING_INIT_32(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32);\
    DECLARE_ENUM_PARSE(_enum_name); DECLARE_ENUM_STRING(_enum_name); };
#define DECLARE_ENUM_33(_enum_name, _enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33) struct _enum_name {\
    DECLARE_ENUM_TYPE_33(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21, _enum_22, _enum_23, _enum_24, _enum_25, _enum_26, _enum_27, _enum_28, _enum_29, _enum_30, _enum_31, _enum_32, _enum_33);\
    DECLARE_ENUM_PARSE_INIT_33(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33);\
    DECLARE_ENUM_STRING_INIT_33(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33);\
    DECLARE_ENUM_PARSE(_enum_name); DECLARE_ENUM_STRING(_enum_name); };
#define DECLARE_ENUM_34(_enum_name, _enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33, _enum_34, _name_34) struct _enum_name {\
    DECLARE_ENUM_TYPE_34(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21, _enum_22, _enum_23, _enum_24, _enum_25, _enum_26, _enum_27, _enum_28, _enum_29, _enum_30, _enum_31, _enum_32, _enum_33, _enum_34);\
    DECLARE_ENUM_PARSE_INIT_34(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33, _enum_34, _name_34);\
    DECLARE_ENUM_STRING_INIT_34(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33, _enum_34, _name_34);\
    DECLARE_ENUM_PARSE(_enum_name); DECLARE_ENUM_STRING(_enum_name); };
#define DECLARE_ENUM_35(_enum_name, _enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33, _enum_34, _name_34, _enum_35, _name_35) struct _enum_name {\
    DECLARE_ENUM_TYPE_35(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21, _enum_22, _enum_23, _enum_24, _enum_25, _enum_26, _enum_27, _enum_28, _enum_29, _enum_30, _enum_31, _enum_32, _enum_33, _enum_34, _enum_35);\
    DECLARE_ENUM_PARSE_INIT_35(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33, _enum_34, _name_34, _enum_35, _name_35);\
    DECLARE_ENUM_STRING_INIT_35(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33, _enum_34, _name_34, _enum_35, _name_35);\
    DECLARE_ENUM_PARSE(_enum_name); DECLARE_ENUM_STRING(_enum_name); };
#define DECLARE_ENUM_36(_enum_name, _enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33, _enum_34, _name_34, _enum_35, _name_35, _enum_36, _name_36) struct _enum_name {\
    DECLARE_ENUM_TYPE_36(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21, _enum_22, _enum_23, _enum_24, _enum_25, _enum_26, _enum_27, _enum_28, _enum_29, _enum_30, _enum_31, _enum_32, _enum_33, _enum_34, _enum_35, _enum_36);\
    DECLARE_ENUM_PARSE_INIT_36(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33, _enum_34, _name_34, _enum_35, _name_35, _enum_36, _name_36);\
    DECLARE_ENUM_STRING_INIT_36(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33, _enum_34, _name_34, _enum_35, _name_35, _enum_36, _name_36);\
    DECLARE_ENUM_PARSE(_enum_name); DECLARE_ENUM_STRING(_enum_name); };
#define DECLARE_ENUM_37(_enum_name, _enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33, _enum_34, _name_34, _enum_35, _name_35, _enum_36, _name_36, _enum_37, _name_37) struct _enum_name {\
    DECLARE_ENUM_TYPE_37(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21, _enum_22, _enum_23, _enum_24, _enum_25, _enum_26, _enum_27, _enum_28, _enum_29, _enum_30, _enum_31, _enum_32, _enum_33, _enum_34, _enum_35, _enum_36, _enum_37);\
    DECLARE_ENUM_PARSE_INIT_37(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33, _enum_34, _name_34, _enum_35, _name_35, _enum_36, _name_36, _enum_37, _name_37);\
    DECLARE_ENUM_STRING_INIT_37(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33, _enum_34, _name_34, _enum_35, _name_35, _enum_36, _name_36, _enum_37, _name_37);\
    DECLARE_ENUM_PARSE(_enum_name); DECLARE_ENUM_STRING(_enum_name); };
#define DECLARE_ENUM_38(_enum_name, _enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33, _enum_34, _name_34, _enum_35, _name_35, _enum_36, _name_36, _enum_37, _name_37, _enum_38, _name_38) struct _enum_name {\
    DECLARE_ENUM_TYPE_38(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21, _enum_22, _enum_23, _enum_24, _enum_25, _enum_26, _enum_27, _enum_28, _enum_29, _enum_30, _enum_31, _enum_32, _enum_33, _enum_34, _enum_35, _enum_36, _enum_37, _enum_38);\
    DECLARE_ENUM_PARSE_INIT_38(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33, _enum_34, _name_34, _enum_35, _name_35, _enum_36, _name_36, _enum_37, _name_37, _enum_38, _name_38);\
    DECLARE_ENUM_STRING_INIT_38(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33, _enum_34, _name_34, _enum_35, _name_35, _enum_36, _name_36, _enum_37, _name_37, _enum_38, _name_38);\
    DECLARE_ENUM_PARSE(_enum_name); DECLARE_ENUM_STRING(_enum_name); };
#define DECLARE_ENUM_39(_enum_name, _enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33, _enum_34, _name_34, _enum_35, _name_35, _enum_36, _name_36, _enum_37, _name_37, _enum_38, _name_38, _enum_39, _name_39) struct _enum_name {\
    DECLARE_ENUM_TYPE_39(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21, _enum_22, _enum_23, _enum_24, _enum_25, _enum_26, _enum_27, _enum_28, _enum_29, _enum_30, _enum_31, _enum_32, _enum_33, _enum_34, _enum_35, _enum_36, _enum_37, _enum_38, _enum_39);\
    DECLARE_ENUM_PARSE_INIT_39(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33, _enum_34, _name_34, _enum_35, _name_35, _enum_36, _name_36, _enum_37, _name_37, _enum_38, _name_38, _enum_39, _name_39);\
    DECLARE_ENUM_STRING_INIT_39(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33, _enum_34, _name_34, _enum_35, _name_35, _enum_36, _name_36, _enum_37, _name_37, _enum_38, _name_38, _enum_39, _name_39);\
    DECLARE_ENUM_PARSE(_enum_name); DECLARE_ENUM_STRING(_enum_name); };
#define DECLARE_ENUM_40(_enum_name, _enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33, _enum_34, _name_34, _enum_35, _name_35, _enum_36, _name_36, _enum_37, _name_37, _enum_38, _name_38, _enum_39, _name_39, _enum_40, _name_40) struct _enum_name {\
    DECLARE_ENUM_TYPE_40(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21, _enum_22, _enum_23, _enum_24, _enum_25, _enum_26, _enum_27, _enum_28, _enum_29, _enum_30, _enum_31, _enum_32, _enum_33, _enum_34, _enum_35, _enum_36, _enum_37, _enum_38, _enum_39, _enum_40);\
    DECLARE_ENUM_PARSE_INIT_40(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33, _enum_34, _name_34, _enum_35, _name_35, _enum_36, _name_36, _enum_37, _name_37, _enum_38, _name_38, _enum_39, _name_39, _enum_40, _name_40);\
    DECLARE_ENUM_STRING_INIT_40(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33, _enum_34, _name_34, _enum_35, _name_35, _enum_36, _name_36, _enum_37, _name_37, _enum_38, _name_38, _enum_39, _name_39, _enum_40, _name_40);\
    DECLARE_ENUM_PARSE(_enum_name); DECLARE_ENUM_STRING(_enum_name); };
#define DECLARE_ENUM_41(_enum_name, _enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33, _enum_34, _name_34, _enum_35, _name_35, _enum_36, _name_36, _enum_37, _name_37, _enum_38, _name_38, _enum_39, _name_39, _enum_40, _name_40, _enum_41, _name_41) struct _enum_name {\
    DECLARE_ENUM_TYPE_41(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21, _enum_22, _enum_23, _enum_24, _enum_25, _enum_26, _enum_27, _enum_28, _enum_29, _enum_30, _enum_31, _enum_32, _enum_33, _enum_34, _enum_35, _enum_36, _enum_37, _enum_38, _enum_39, _enum_40, _enum_41);\
    DECLARE_ENUM_PARSE_INIT_41(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33, _enum_34, _name_34, _enum_35, _name_35, _enum_36, _name_36, _enum_37, _name_37, _enum_38, _name_38, _enum_39, _name_39, _enum_40, _name_40, _enum_41, _name_41);\
    DECLARE_ENUM_STRING_INIT_41(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33, _enum_34, _name_34, _enum_35, _name_35, _enum_36, _name_36, _enum_37, _name_37, _enum_38, _name_38, _enum_39, _name_39, _enum_40, _name_40, _enum_41, _name_41);\
    DECLARE_ENUM_PARSE(_enum_name); DECLARE_ENUM_STRING(_enum_name); };
#define DECLARE_ENUM_42(_enum_name, _enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33, _enum_34, _name_34, _enum_35, _name_35, _enum_36, _name_36, _enum_37, _name_37, _enum_38, _name_38, _enum_39, _name_39, _enum_40, _name_40, _enum_41, _name_41, _enum_42, _name_42) struct _enum_name {\
    DECLARE_ENUM_TYPE_42(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21, _enum_22, _enum_23, _enum_24, _enum_25, _enum_26, _enum_27, _enum_28, _enum_29, _enum_30, _enum_31, _enum_32, _enum_33, _enum_34, _enum_35, _enum_36, _enum_37, _enum_38, _enum_39, _enum_40, _enum_41, _enum_42);\
    DECLARE_ENUM_PARSE_INIT_42(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33, _enum_34, _name_34, _enum_35, _name_35, _enum_36, _name_36, _enum_37, _name_37, _enum_38, _name_38, _enum_39, _name_39, _enum_40, _name_40, _enum_41, _name_41, _enum_42, _name_42);\
    DECLARE_ENUM_STRING_INIT_42(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33, _enum_34, _name_34, _enum_35, _name_35, _enum_36, _name_36, _enum_37, _name_37, _enum_38, _name_38, _enum_39, _name_39, _enum_40, _name_40, _enum_41, _name_41, _enum_42, _name_42);\
    DECLARE_ENUM_PARSE(_enum_name); DECLARE_ENUM_STRING(_enum_name); };
#define DECLARE_ENUM_43(_enum_name, _enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33, _enum_34, _name_34, _enum_35, _name_35, _enum_36, _name_36, _enum_37, _name_37, _enum_38, _name_38, _enum_39, _name_39, _enum_40, _name_40, _enum_41, _name_41, _enum_42, _name_42, _enum_43, _name_43) struct _enum_name {\
    DECLARE_ENUM_TYPE_43(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21, _enum_22, _enum_23, _enum_24, _enum_25, _enum_26, _enum_27, _enum_28, _enum_29, _enum_30, _enum_31, _enum_32, _enum_33, _enum_34, _enum_35, _enum_36, _enum_37, _enum_38, _enum_39, _enum_40, _enum_41, _enum_42, _enum_43);\
    DECLARE_ENUM_PARSE_INIT_43(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33, _enum_34, _name_34, _enum_35, _name_35, _enum_36, _name_36, _enum_37, _name_37, _enum_38, _name_38, _enum_39, _name_39, _enum_40, _name_40, _enum_41, _name_41, _enum_42, _name_42, _enum_43, _name_43);\
    DECLARE_ENUM_STRING_INIT_43(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33, _enum_34, _name_34, _enum_35, _name_35, _enum_36, _name_36, _enum_37, _name_37, _enum_38, _name_38, _enum_39, _name_39, _enum_40, _name_40, _enum_41, _name_41, _enum_42, _name_42, _enum_43, _name_43);\
    DECLARE_ENUM_PARSE(_enum_name); DECLARE_ENUM_STRING(_enum_name); };
#define DECLARE_ENUM_44(_enum_name, _enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33, _enum_34, _name_34, _enum_35, _name_35, _enum_36, _name_36, _enum_37, _name_37, _enum_38, _name_38, _enum_39, _name_39, _enum_40, _name_40, _enum_41, _name_41, _enum_42, _name_42, _enum_43, _name_43, _enum_44, _name_44) struct _enum_name {\
    DECLARE_ENUM_TYPE_44(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21, _enum_22, _enum_23, _enum_24, _enum_25, _enum_26, _enum_27, _enum_28, _enum_29, _enum_30, _enum_31, _enum_32, _enum_33, _enum_34, _enum_35, _enum_36, _enum_37, _enum_38, _enum_39, _enum_40, _enum_41, _enum_42, _enum_43, _enum_44);\
    DECLARE_ENUM_PARSE_INIT_44(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33, _enum_34, _name_34, _enum_35, _name_35, _enum_36, _name_36, _enum_37, _name_37, _enum_38, _name_38, _enum_39, _name_39, _enum_40, _name_40, _enum_41, _name_41, _enum_42, _name_42, _enum_43, _name_43, _enum_44, _name_44);\
    DECLARE_ENUM_STRING_INIT_44(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33, _enum_34, _name_34, _enum_35, _name_35, _enum_36, _name_36, _enum_37, _name_37, _enum_38, _name_38, _enum_39, _name_39, _enum_40, _name_40, _enum_41, _name_41, _enum_42, _name_42, _enum_43, _name_43, _enum_44, _name_44);\
    DECLARE_ENUM_PARSE(_enum_name); DECLARE_ENUM_STRING(_enum_name); };
#define DECLARE_ENUM_45(_enum_name, _enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33, _enum_34, _name_34, _enum_35, _name_35, _enum_36, _name_36, _enum_37, _name_37, _enum_38, _name_38, _enum_39, _name_39, _enum_40, _name_40, _enum_41, _name_41, _enum_42, _name_42, _enum_43, _name_43, _enum_44, _name_44, _enum_45, _name_45) struct _enum_name {\
    DECLARE_ENUM_TYPE_45(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21, _enum_22, _enum_23, _enum_24, _enum_25, _enum_26, _enum_27, _enum_28, _enum_29, _enum_30, _enum_31, _enum_32, _enum_33, _enum_34, _enum_35, _enum_36, _enum_37, _enum_38, _enum_39, _enum_40, _enum_41, _enum_42, _enum_43, _enum_44, _enum_45);\
    DECLARE_ENUM_PARSE_INIT_45(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33, _enum_34, _name_34, _enum_35, _name_35, _enum_36, _name_36, _enum_37, _name_37, _enum_38, _name_38, _enum_39, _name_39, _enum_40, _name_40, _enum_41, _name_41, _enum_42, _name_42, _enum_43, _name_43, _enum_44, _name_44, _enum_45, _name_45);\
    DECLARE_ENUM_STRING_INIT_45(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33, _enum_34, _name_34, _enum_35, _name_35, _enum_36, _name_36, _enum_37, _name_37, _enum_38, _name_38, _enum_39, _name_39, _enum_40, _name_40, _enum_41, _name_41, _enum_42, _name_42, _enum_43, _name_43, _enum_44, _name_44, _enum_45, _name_45);\
    DECLARE_ENUM_PARSE(_enum_name); DECLARE_ENUM_STRING(_enum_name); };
#define DECLARE_ENUM_46(_enum_name, _enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33, _enum_34, _name_34, _enum_35, _name_35, _enum_36, _name_36, _enum_37, _name_37, _enum_38, _name_38, _enum_39, _name_39, _enum_40, _name_40, _enum_41, _name_41, _enum_42, _name_42, _enum_43, _name_43, _enum_44, _name_44, _enum_45, _name_45, _enum_46, _name_46) struct _enum_name {\
    DECLARE_ENUM_TYPE_46(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21, _enum_22, _enum_23, _enum_24, _enum_25, _enum_26, _enum_27, _enum_28, _enum_29, _enum_30, _enum_31, _enum_32, _enum_33, _enum_34, _enum_35, _enum_36, _enum_37, _enum_38, _enum_39, _enum_40, _enum_41, _enum_42, _enum_43, _enum_44, _enum_45, _enum_46);\
    DECLARE_ENUM_PARSE_INIT_46(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33, _enum_34, _name_34, _enum_35, _name_35, _enum_36, _name_36, _enum_37, _name_37, _enum_38, _name_38, _enum_39, _name_39, _enum_40, _name_40, _enum_41, _name_41, _enum_42, _name_42, _enum_43, _name_43, _enum_44, _name_44, _enum_45, _name_45, _enum_46, _name_46);\
    DECLARE_ENUM_STRING_INIT_46(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33, _enum_34, _name_34, _enum_35, _name_35, _enum_36, _name_36, _enum_37, _name_37, _enum_38, _name_38, _enum_39, _name_39, _enum_40, _name_40, _enum_41, _name_41, _enum_42, _name_42, _enum_43, _name_43, _enum_44, _name_44, _enum_45, _name_45, _enum_46, _name_46);\
    DECLARE_ENUM_PARSE(_enum_name); DECLARE_ENUM_STRING(_enum_name); };
#define DECLARE_ENUM_47(_enum_name, _enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33, _enum_34, _name_34, _enum_35, _name_35, _enum_36, _name_36, _enum_37, _name_37, _enum_38, _name_38, _enum_39, _name_39, _enum_40, _name_40, _enum_41, _name_41, _enum_42, _name_42, _enum_43, _name_43, _enum_44, _name_44, _enum_45, _name_45, _enum_46, _name_46, _enum_47, _name_47) struct _enum_name {\
    DECLARE_ENUM_TYPE_47(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21, _enum_22, _enum_23, _enum_24, _enum_25, _enum_26, _enum_27, _enum_28, _enum_29, _enum_30, _enum_31, _enum_32, _enum_33, _enum_34, _enum_35, _enum_36, _enum_37, _enum_38, _enum_39, _enum_40, _enum_41, _enum_42, _enum_43, _enum_44, _enum_45, _enum_46, _enum_47);\
    DECLARE_ENUM_PARSE_INIT_47(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33, _enum_34, _name_34, _enum_35, _name_35, _enum_36, _name_36, _enum_37, _name_37, _enum_38, _name_38, _enum_39, _name_39, _enum_40, _name_40, _enum_41, _name_41, _enum_42, _name_42, _enum_43, _name_43, _enum_44, _name_44, _enum_45, _name_45, _enum_46, _name_46, _enum_47, _name_47);\
    DECLARE_ENUM_STRING_INIT_47(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33, _enum_34, _name_34, _enum_35, _name_35, _enum_36, _name_36, _enum_37, _name_37, _enum_38, _name_38, _enum_39, _name_39, _enum_40, _name_40, _enum_41, _name_41, _enum_42, _name_42, _enum_43, _name_43, _enum_44, _name_44, _enum_45, _name_45, _enum_46, _name_46, _enum_47, _name_47);\
    DECLARE_ENUM_PARSE(_enum_name); DECLARE_ENUM_STRING(_enum_name); };
#define DECLARE_ENUM_48(_enum_name, _enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33, _enum_34, _name_34, _enum_35, _name_35, _enum_36, _name_36, _enum_37, _name_37, _enum_38, _name_38, _enum_39, _name_39, _enum_40, _name_40, _enum_41, _name_41, _enum_42, _name_42, _enum_43, _name_43, _enum_44, _name_44, _enum_45, _name_45, _enum_46, _name_46, _enum_47, _name_47, _enum_48, _name_48) struct _enum_name {\
    DECLARE_ENUM_TYPE_48(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21, _enum_22, _enum_23, _enum_24, _enum_25, _enum_26, _enum_27, _enum_28, _enum_29, _enum_30, _enum_31, _enum_32, _enum_33, _enum_34, _enum_35, _enum_36, _enum_37, _enum_38, _enum_39, _enum_40, _enum_41, _enum_42, _enum_43, _enum_44, _enum_45, _enum_46, _enum_47, _enum_48);\
    DECLARE_ENUM_PARSE_INIT_48(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33, _enum_34, _name_34, _enum_35, _name_35, _enum_36, _name_36, _enum_37, _name_37, _enum_38, _name_38, _enum_39, _name_39, _enum_40, _name_40, _enum_41, _name_41, _enum_42, _name_42, _enum_43, _name_43, _enum_44, _name_44, _enum_45, _name_45, _enum_46, _name_46, _enum_47, _name_47, _enum_48, _name_48);\
    DECLARE_ENUM_STRING_INIT_48(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33, _enum_34, _name_34, _enum_35, _name_35, _enum_36, _name_36, _enum_37, _name_37, _enum_38, _name_38, _enum_39, _name_39, _enum_40, _name_40, _enum_41, _name_41, _enum_42, _name_42, _enum_43, _name_43, _enum_44, _name_44, _enum_45, _name_45, _enum_46, _name_46, _enum_47, _name_47, _enum_48, _name_48);\
    DECLARE_ENUM_PARSE(_enum_name); DECLARE_ENUM_STRING(_enum_name); };
#define DECLARE_ENUM_49(_enum_name, _enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33, _enum_34, _name_34, _enum_35, _name_35, _enum_36, _name_36, _enum_37, _name_37, _enum_38, _name_38, _enum_39, _name_39, _enum_40, _name_40, _enum_41, _name_41, _enum_42, _name_42, _enum_43, _name_43, _enum_44, _name_44, _enum_45, _name_45, _enum_46, _name_46, _enum_47, _name_47, _enum_48, _name_48, _enum_49, _name_49) struct _enum_name {\
    DECLARE_ENUM_TYPE_49(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21, _enum_22, _enum_23, _enum_24, _enum_25, _enum_26, _enum_27, _enum_28, _enum_29, _enum_30, _enum_31, _enum_32, _enum_33, _enum_34, _enum_35, _enum_36, _enum_37, _enum_38, _enum_39, _enum_40, _enum_41, _enum_42, _enum_43, _enum_44, _enum_45, _enum_46, _enum_47, _enum_48, _enum_49);\
    DECLARE_ENUM_PARSE_INIT_49(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33, _enum_34, _name_34, _enum_35, _name_35, _enum_36, _name_36, _enum_37, _name_37, _enum_38, _name_38, _enum_39, _name_39, _enum_40, _name_40, _enum_41, _name_41, _enum_42, _name_42, _enum_43, _name_43, _enum_44, _name_44, _enum_45, _name_45, _enum_46, _name_46, _enum_47, _name_47, _enum_48, _name_48, _enum_49, _name_49);\
    DECLARE_ENUM_STRING_INIT_49(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33, _enum_34, _name_34, _enum_35, _name_35, _enum_36, _name_36, _enum_37, _name_37, _enum_38, _name_38, _enum_39, _name_39, _enum_40, _name_40, _enum_41, _name_41, _enum_42, _name_42, _enum_43, _name_43, _enum_44, _name_44, _enum_45, _name_45, _enum_46, _name_46, _enum_47, _name_47, _enum_48, _name_48, _enum_49, _name_49);\
    DECLARE_ENUM_PARSE(_enum_name); DECLARE_ENUM_STRING(_enum_name); };
#define DECLARE_ENUM_50(_enum_name, _enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33, _enum_34, _name_34, _enum_35, _name_35, _enum_36, _name_36, _enum_37, _name_37, _enum_38, _name_38, _enum_39, _name_39, _enum_40, _name_40, _enum_41, _name_41, _enum_42, _name_42, _enum_43, _name_43, _enum_44, _name_44, _enum_45, _name_45, _enum_46, _name_46, _enum_47, _name_47, _enum_48, _name_48, _enum_49, _name_49, _enum_50, _name_50) struct _enum_name {\
    DECLARE_ENUM_TYPE_50(_enum_1, _enum_2, _enum_3, _enum_4, _enum_5, _enum_6, _enum_7, _enum_8, _enum_9, _enum_10, _enum_11, _enum_12, _enum_13, _enum_14, _enum_15, _enum_16, _enum_17, _enum_18, _enum_19, _enum_20, _enum_21, _enum_22, _enum_23, _enum_24, _enum_25, _enum_26, _enum_27, _enum_28, _enum_29, _enum_30, _enum_31, _enum_32, _enum_33, _enum_34, _enum_35, _enum_36, _enum_37, _enum_38, _enum_39, _enum_40, _enum_41, _enum_42, _enum_43, _enum_44, _enum_45, _enum_46, _enum_47, _enum_48, _enum_49, _enum_50);\
    DECLARE_ENUM_PARSE_INIT_50(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33, _enum_34, _name_34, _enum_35, _name_35, _enum_36, _name_36, _enum_37, _name_37, _enum_38, _name_38, _enum_39, _name_39, _enum_40, _name_40, _enum_41, _name_41, _enum_42, _name_42, _enum_43, _name_43, _enum_44, _name_44, _enum_45, _name_45, _enum_46, _name_46, _enum_47, _name_47, _enum_48, _name_48, _enum_49, _name_49, _enum_50, _name_50);\
    DECLARE_ENUM_STRING_INIT_50(_enum_1, _name_1, _enum_2, _name_2, _enum_3, _name_3, _enum_4, _name_4, _enum_5, _name_5, _enum_6, _name_6, _enum_7, _name_7, _enum_8, _name_8, _enum_9, _name_9, _enum_10, _name_10, _enum_11, _name_11, _enum_12, _name_12, _enum_13, _name_13, _enum_14, _name_14, _enum_15, _name_15, _enum_16, _name_16, _enum_17, _name_17, _enum_18, _name_18, _enum_19, _name_19, _enum_20, _name_20, _enum_21, _name_21, _enum_22, _name_22, _enum_23, _name_23, _enum_24, _name_24, _enum_25, _name_25, _enum_26, _name_26, _enum_27, _name_27, _enum_28, _name_28, _enum_29, _name_29, _enum_30, _name_30, _enum_31, _name_31, _enum_32, _name_32, _enum_33, _name_33, _enum_34, _name_34, _enum_35, _name_35, _enum_36, _name_36, _enum_37, _name_37, _enum_38, _name_38, _enum_39, _name_39, _enum_40, _name_40, _enum_41, _name_41, _enum_42, _name_42, _enum_43, _name_43, _enum_44, _name_44, _enum_45, _name_45, _enum_46, _name_46, _enum_47, _name_47, _enum_48, _name_48, _enum_49, _name_49, _enum_50, _name_50);\
    DECLARE_ENUM_PARSE(_enum_name); DECLARE_ENUM_STRING(_enum_name); };

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////// Templates Generation Code /////////////////////////////////////////////////////////////////////
// #include <string>
// #include <sstream>
// 
// std::string Generate_EnumTypesDeclarations(unsigned int count);
// std::string Generate_EnumParseInitDeclarations(unsigned int count);
// std::string Generate_EnumStringInitDeclarations(unsigned int count);
// std::string Generate_EnumDeclarations(unsigned int count);
// 
// int _tmain(int argc, _TCHAR* argv[])
// {
//     int const num = 50;
// 
//     std::string decl_enum_types = Generate_EnumTypesDeclarations(num);
//     std::string decl_enum_parse_inits = Generate_EnumParseInitDeclarations(num);
//     std::string decl_enum_string_inits = Generate_EnumStringInitDeclarations(num);
//     std::string decl_enums = Generate_EnumDeclarations(num);
// 
//     return 0;
// }
// 
// std::string Generate_EnumTypesDeclarations(unsigned int count)
// {
//     std::stringstream res_strm;
//     for (unsigned int i = 1; i <= count; ++i)
//     {
//         res_strm << "#define DECLARE_ENUM_TYPE_" << i << "(_enum_1";
//         for (unsigned int j = 2; j <= i; ++j) res_strm << ", _enum_" << j;
//         res_strm << ")\\\r\n    typedef enum EnumType { _enum_1";
//         for (unsigned int j = 2; j <= i; ++j) res_strm << ", _enum_" << j;
//         res_strm << " }\r\n";
//     }
//     return res_strm.str();
// }
// 
// std::string Generate_EnumParseInitDeclarations(unsigned int count)
// {
//     std::stringstream res_strm;
//     for (unsigned int i = 1; i <= count; ++i)
//     {
//         res_strm << "#define DECLARE_ENUM_PARSE_INIT_" << i << "(_enum_1, _name_1";
//         for (unsigned int j = 2; j <= i; ++j) res_strm << ", _enum_" << j << ", _name_" << j;
//         res_strm << ")\\\r\n    private: static void InitParse() { std::map<std::wstring, EnumType> parse_map; parse_map[_name_1] = _enum_1;";
//         for (unsigned int j = 2; j <= i; ++j) res_strm << " parse_map[_name_" << j << "] = _enum_"<< j <<";";
//         res_strm << " ParseMap.swap(parse_map); }\r\n";
//     }
//     return res_strm.str();
// }
// 
// std::string Generate_EnumStringInitDeclarations(unsigned int count)
// {
//     std::stringstream res_strm;
//     for (unsigned int i = 1; i <= count; ++i)
//     {
//         res_strm << "#define DECLARE_ENUM_STRING_INIT_" << i << "(_enum_1, _name_1";
//         for (unsigned int j = 2; j <= i; ++j) res_strm << ", _enum_" << j << ", _name_" << j;
//         res_strm << ")\\\r\n    private: static void InitString() { std::map<EnumType, std::wstring> string_map; string_map[_enum_1] = _name_1;";
//         for (unsigned int j = 2; j <= i; ++j) res_strm << " string_map[_enum_" << j << "] = _name_"<< j <<";";
//         res_strm << " StringMap.swap(string_map); }\r\n";
//     }
//     return res_strm.str();
// }
// 
// std::string Generate_EnumDeclarations(unsigned int count)
// {
//     std::stringstream res_strm;
//     for (unsigned int i = 1; i <= count; ++i)
//     {
//         res_strm << "#define DECLARE_ENUM_" << i << "(_enum_name, _enum_1, _name_1";
//         for (unsigned int j = 2; j <= i; ++j) res_strm << ", _enum_" << j << ", _name_" << j;
//         res_strm << ") struct _enum_name {\\\r\n    DECLARE_ENUM_TYPE_" << i << "(_enum_1";
//         for (unsigned int j = 2; j <= i; ++j) res_strm << ", _enum_" << j;
//         res_strm << ");\\\r\n    DECLARE_ENUM_PARSE_INIT_" << i << "(_enum_1, _name_1";
//         for (unsigned int j = 2; j <= i; ++j) res_strm << ", _enum_" << j << ", _name_" << j;
//         res_strm << ");\\\r\n    DECLARE_ENUM_STRING_INIT_" << i << "(_enum_1, _name_1";
//         for (unsigned int j = 2; j <= i; ++j) res_strm << ", _enum_" << j << ", _name_" << j;
//         res_strm << ");\\\r\n    DECLARE_ENUM_PARSE(_enum_name); DECLARE_ENUM_STRING(_enum_name); }; DEFINE_ENUM_PARSE(_enum_name);  DEFINE_ENUM_STRING(_enum_name)\r\n";
//     }
//     return res_strm.str();
// }
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#endif // ENUM_DEFINITION__INL__1F640F79_5A1F_444F_97A9_BEA055A1CC0E
